// ***************************************************************************
//
//   Generated automatically by genwrapper.
//   Please DO NOT EDIT this file!
//
// ***************************************************************************

#include <osgIntrospection/ReflectionMacros>
#include <osgIntrospection/TypedMethodInfo>
#include <osgIntrospection/Attributes>

#include <osgGA/GUIEventAdapter>
#include <osgProducer/EventAdapter>

// Must undefine IN and OUT macros defined in Windows headers
#ifdef IN
#undef IN
#endif
#ifdef OUT
#undef OUT
#endif

BEGIN_OBJECT_REFLECTOR(osgProducer::EventAdapter)
	I_BaseType(osgGA::GUIEventAdapter);
	I_Constructor0();
	I_Method0(osgGA::GUIEventAdapter::EventType, getEventType);
	I_Method1(void, setKey, IN, int, key);
	I_Method0(int, getKey);
	I_Method0(int, getButton);
	I_Method0(float, getXmin);
	I_Method0(float, getXmax);
	I_Method0(float, getYmin);
	I_Method0(float, getYmax);
	I_Method1(void, setX, IN, float, x);
	I_Method0(float, getX);
	I_Method1(void, setY, IN, float, y);
	I_Method0(float, getY);
	I_Method1(void, setButtonMak, IN, unsigned int, mask);
	I_Method0(unsigned int, getButtonMask);
	I_Method0(double, time);
	I_Method0(unsigned int, getModKeyMask);
	I_Method5(void, adaptResize, IN, double, t, IN, float, Xmin, IN, float, Ymin, IN, float, Xmax, IN, float, Ymax);
	I_Method2(void, adaptMouseScroll, IN, double, t, IN, Producer::KeyboardMouseCallback::ScrollingMotion, sm);
	I_Method3(void, adaptMouseMotion, IN, double, t, IN, float, x, IN, float, y);
	I_Method4(void, adaptButtonPress, IN, double, t, IN, float, x, IN, float, y, IN, unsigned int, button);
	I_Method4(void, adaptButtonRelease, IN, double, t, IN, float, x, IN, float, y, IN, unsigned int, button);
	I_Method2(void, adaptKeyPress, IN, double, t, IN, Producer::KeySymbol, key);
	I_Method2(void, adaptKeyRelease, IN, double, t, IN, Producer::KeySymbol, key);
	I_Method1(void, adaptFrame, IN, double, t);
	I_Method0(void, copyStaticVariables);
	I_ReadOnlyProperty(int, Button);
	I_WriteOnlyProperty(unsigned int, ButtonMak);
	I_ReadOnlyProperty(unsigned int, ButtonMask);
	I_ReadOnlyProperty(osgGA::GUIEventAdapter::EventType, EventType);
	I_Property(int, Key);
	I_ReadOnlyProperty(unsigned int, ModKeyMask);
	I_Property(float, X);
	I_ReadOnlyProperty(float, Xmax);
	I_ReadOnlyProperty(float, Xmin);
	I_Property(float, Y);
	I_ReadOnlyProperty(float, Ymax);
	I_ReadOnlyProperty(float, Ymin);
END_REFLECTOR

