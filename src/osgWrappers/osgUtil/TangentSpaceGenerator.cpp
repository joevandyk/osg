// ***************************************************************************
//
//   Generated automatically by genwrapper.
//   Please DO NOT EDIT this file!
//
// ***************************************************************************

#include <osgIntrospection/ReflectionMacros>
#include <osgIntrospection/TypedMethodInfo>
#include <osgIntrospection/Attributes>

#include <osg/Array>
#include <osg/CopyOp>
#include <osg/Geometry>
#include <osgUtil/TangentSpaceGenerator>

BEGIN_OBJECT_REFLECTOR(osgUtil::TangentSpaceGenerator)
	BaseType(osg::Referenced);
	Constructor0();
	ConstructorWithDefaults2(IN, const osgUtil::TangentSpaceGenerator &, copy, , IN, const osg::CopyOp &, copyop, osg::CopyOp::SHALLOW_COPY);
	MethodWithDefaults2(void, generate, IN, osg::Geometry *, geo, , IN, int, normal_map_tex_unit, 0);
	Method0(osg::Vec4Array *, getTangentArray);
	Method0(const osg::Vec4Array *, getTangentArray);
	Method1(void, setTangentArray, IN, osg::Vec4Array *, array);
	Method0(osg::Vec4Array *, getNormalArray);
	Method0(const osg::Vec4Array *, getNormalArray);
	Method1(void, setNormalArray, IN, osg::Vec4Array *, array);
	Method0(osg::Vec4Array *, getBinormalArray);
	Method0(const osg::Vec4Array *, getBinormalArray);
	Method1(void, setBinormalArray, IN, osg::Vec4Array *, array);
	Method0(osg::IndexArray *, getIndices);
	Property(osg::Vec4Array *, BinormalArray);
	ReadOnlyProperty(osg::IndexArray *, Indices);
	Property(osg::Vec4Array *, NormalArray);
	Property(osg::Vec4Array *, TangentArray);
END_REFLECTOR

