// ***************************************************************************
//
//   Generated automatically by genwrapper.
//   Please DO NOT EDIT this file!
//
// ***************************************************************************

#include <osgIntrospection/ReflectionMacros>
#include <osgIntrospection/TypedMethodInfo>
#include <osgIntrospection/Attributes>

#include <osg/CopyOp>
#include <osg/Matrix>
#include <osg/Object>
#include <osg/State>
#include <osg/StateAttribute>
#include <osgUtil/RenderLeaf>
#include <osgUtil/RenderStageLighting>

TYPE_NAME_ALIAS(std::pair< osg::ref_ptr< const osg::StateAttribute > COMMA  osg::ref_ptr< osg::RefMatrix > >, osgUtil::RenderStageLighting::AttrMatrixPair);

TYPE_NAME_ALIAS(std::vector< osgUtil::RenderStageLighting::AttrMatrixPair >, osgUtil::RenderStageLighting::AttrMatrixList);

TYPE_NAME_ALIAS(std::map< unsigned int COMMA  osgUtil::RenderStageLighting::AttrMatrixList >, osgUtil::RenderStageLighting::TexUnitAttrMatrixListMap);

BEGIN_OBJECT_REFLECTOR(osgUtil::RenderStageLighting)
	BaseType(osg::Object);
	Constructor0();
	Method0(osg::Object *, cloneType);
	Method1(osg::Object *, clone, IN, const osg::CopyOp &, x);
	Method1(bool, isSameKindAs, IN, const osg::Object *, obj);
	Method0(const char *, libraryName);
	Method0(const char *, className);
	Method0(void, reset);
	Method2(void, addPositionedAttribute, IN, osg::RefMatrix *, matrix, IN, const osg::StateAttribute *, attr);
	Method3(void, addPositionedTextureAttribute, IN, unsigned int, textureUnit, IN, osg::RefMatrix *, matrix, IN, const osg::StateAttribute *, attr);
	Method2(void, draw, IN, osg::State &, state, IN, osgUtil::RenderLeaf *&, previous);
END_REFLECTOR

BEGIN_VALUE_REFLECTOR(osg::ref_ptr< const osg::StateAttribute >)
	Constructor0();
	Constructor1(IN, const osg::StateAttribute *, t);
	Constructor1(IN, const osg::ref_ptr< const osg::StateAttribute > &, rp);
	Method0(bool, valid);
	Method0(const osg::StateAttribute *, get);
	Method0(const const osg::StateAttribute *, get);
	Method0(const osg::StateAttribute *, take);
	Method0(const osg::StateAttribute *, release);
	ReadOnlyProperty(const osg::StateAttribute *, );
END_REFLECTOR

BEGIN_VALUE_REFLECTOR(osg::ref_ptr< osg::RefMatrix >)
	Constructor0();
	Constructor1(IN, osg::RefMatrix *, t);
	Constructor1(IN, const osg::ref_ptr< osg::RefMatrix > &, rp);
	Method0(bool, valid);
	Method0(osg::RefMatrix *, get);
	Method0(const osg::RefMatrix *, get);
	Method0(osg::RefMatrix *, take);
	Method0(osg::RefMatrix *, release);
	ReadOnlyProperty(osg::RefMatrix *, );
END_REFLECTOR

STD_MAP_REFLECTOR(std::map< unsigned int COMMA  osgUtil::RenderStageLighting::AttrMatrixList >);

STD_PAIR_REFLECTOR(std::pair< osg::ref_ptr< const osg::StateAttribute > COMMA  osg::ref_ptr< osg::RefMatrix > >);

STD_VECTOR_REFLECTOR(std::vector< osgUtil::RenderStageLighting::AttrMatrixPair >);

