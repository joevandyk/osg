// ***************************************************************************
//
//   Generated automatically by genwrapper.
//   Please DO NOT EDIT this file!
//
// ***************************************************************************

#include <osgIntrospection/ReflectionMacros>
#include <osgIntrospection/TypedMethodInfo>
#include <osgIntrospection/StaticMethodInfo>
#include <osgIntrospection/Attributes>

#include <osg/Array>
#include <osgUtil/OperationArrayFunctor>

// Must undefine IN and OUT macros defined in Windows headers
#ifdef IN
#undef IN
#endif
#ifdef OUT
#undef OUT
#endif

BEGIN_VALUE_REFLECTOR(osgUtil::AddRangeOperator)
	I_DeclaringFile("osgUtil/OperationArrayFunctor");
	I_Constructor0(____AddRangeOperator,
	               "",
	               "");
	I_PublicMemberProperty(unsigned int, _begin);
	I_PublicMemberProperty(unsigned int, _count);
	I_PublicMemberProperty(osg::Vec3, _vector);
END_REFLECTOR

BEGIN_VALUE_REFLECTOR(osgUtil::MultiplyRangeOperator)
	I_DeclaringFile("osgUtil/OperationArrayFunctor");
	I_Constructor0(____MultiplyRangeOperator,
	               "",
	               "");
	I_PublicMemberProperty(unsigned int, _begin);
	I_PublicMemberProperty(unsigned int, _count);
	I_PublicMemberProperty(osg::Vec3, _vector);
END_REFLECTOR

TYPE_NAME_ALIAS(osgUtil::OperationArrayFunctor< osgUtil::AddRangeOperator >, osgUtil::AddRangeFunctor)

TYPE_NAME_ALIAS(osgUtil::OperationArrayFunctor< osgUtil::MultiplyRangeOperator >, osgUtil::MultiplyRangeFunctor)

BEGIN_OBJECT_REFLECTOR(osgUtil::OperationArrayFunctor< osgUtil::AddRangeOperator >)
	I_DeclaringFile("osgUtil/OperationArrayFunctor");
	I_BaseType(osg::ArrayVisitor);
	I_Constructor0(____AddRangeOperator >,
	               "",
	               "");
	I_Method1(void, apply, IN, osg::Array &, x,
	          Properties::VIRTUAL,
	          __void__apply__osg_Array_R1,
	          "",
	          "");
	I_Method1(void, apply, IN, osg::Vec2Array &, array,
	          Properties::VIRTUAL,
	          __void__apply__osg_Vec2Array_R1,
	          "",
	          "");
	I_Method1(void, apply, IN, osg::Vec3Array &, array,
	          Properties::VIRTUAL,
	          __void__apply__osg_Vec3Array_R1,
	          "",
	          "");
	I_Method1(void, apply, IN, osg::Vec4Array &, array,
	          Properties::VIRTUAL,
	          __void__apply__osg_Vec4Array_R1,
	          "",
	          "");
	I_Method1(void, apply, IN, osg::Vec4ubArray &, array,
	          Properties::VIRTUAL,
	          __void__apply__osg_Vec4ubArray_R1,
	          "",
	          "");
	I_Method1(void, apply, IN, osg::Vec2bArray &, array,
	          Properties::VIRTUAL,
	          __void__apply__osg_Vec2bArray_R1,
	          "",
	          "");
	I_Method1(void, apply, IN, osg::Vec3bArray &, array,
	          Properties::VIRTUAL,
	          __void__apply__osg_Vec3bArray_R1,
	          "",
	          "");
	I_Method1(void, apply, IN, osg::Vec4bArray &, array,
	          Properties::VIRTUAL,
	          __void__apply__osg_Vec4bArray_R1,
	          "",
	          "");
	I_Method1(void, apply, IN, osg::Vec2sArray &, array,
	          Properties::VIRTUAL,
	          __void__apply__osg_Vec2sArray_R1,
	          "",
	          "");
	I_Method1(void, apply, IN, osg::Vec3sArray &, array,
	          Properties::VIRTUAL,
	          __void__apply__osg_Vec3sArray_R1,
	          "",
	          "");
	I_Method1(void, apply, IN, osg::Vec4sArray &, array,
	          Properties::VIRTUAL,
	          __void__apply__osg_Vec4sArray_R1,
	          "",
	          "");
	I_Method1(void, apply, IN, osg::Vec2dArray &, array,
	          Properties::VIRTUAL,
	          __void__apply__osg_Vec2dArray_R1,
	          "",
	          "");
	I_Method1(void, apply, IN, osg::Vec3dArray &, array,
	          Properties::VIRTUAL,
	          __void__apply__osg_Vec3dArray_R1,
	          "",
	          "");
	I_Method1(void, apply, IN, osg::Vec4dArray &, array,
	          Properties::VIRTUAL,
	          __void__apply__osg_Vec4dArray_R1,
	          "",
	          "");
END_REFLECTOR

BEGIN_OBJECT_REFLECTOR(osgUtil::OperationArrayFunctor< osgUtil::MultiplyRangeOperator >)
	I_DeclaringFile("osgUtil/OperationArrayFunctor");
	I_BaseType(osg::ArrayVisitor);
	I_Constructor0(____MultiplyRangeOperator >,
	               "",
	               "");
	I_Method1(void, apply, IN, osg::Array &, x,
	          Properties::VIRTUAL,
	          __void__apply__osg_Array_R1,
	          "",
	          "");
	I_Method1(void, apply, IN, osg::Vec2Array &, array,
	          Properties::VIRTUAL,
	          __void__apply__osg_Vec2Array_R1,
	          "",
	          "");
	I_Method1(void, apply, IN, osg::Vec3Array &, array,
	          Properties::VIRTUAL,
	          __void__apply__osg_Vec3Array_R1,
	          "",
	          "");
	I_Method1(void, apply, IN, osg::Vec4Array &, array,
	          Properties::VIRTUAL,
	          __void__apply__osg_Vec4Array_R1,
	          "",
	          "");
	I_Method1(void, apply, IN, osg::Vec4ubArray &, array,
	          Properties::VIRTUAL,
	          __void__apply__osg_Vec4ubArray_R1,
	          "",
	          "");
	I_Method1(void, apply, IN, osg::Vec2bArray &, array,
	          Properties::VIRTUAL,
	          __void__apply__osg_Vec2bArray_R1,
	          "",
	          "");
	I_Method1(void, apply, IN, osg::Vec3bArray &, array,
	          Properties::VIRTUAL,
	          __void__apply__osg_Vec3bArray_R1,
	          "",
	          "");
	I_Method1(void, apply, IN, osg::Vec4bArray &, array,
	          Properties::VIRTUAL,
	          __void__apply__osg_Vec4bArray_R1,
	          "",
	          "");
	I_Method1(void, apply, IN, osg::Vec2sArray &, array,
	          Properties::VIRTUAL,
	          __void__apply__osg_Vec2sArray_R1,
	          "",
	          "");
	I_Method1(void, apply, IN, osg::Vec3sArray &, array,
	          Properties::VIRTUAL,
	          __void__apply__osg_Vec3sArray_R1,
	          "",
	          "");
	I_Method1(void, apply, IN, osg::Vec4sArray &, array,
	          Properties::VIRTUAL,
	          __void__apply__osg_Vec4sArray_R1,
	          "",
	          "");
	I_Method1(void, apply, IN, osg::Vec2dArray &, array,
	          Properties::VIRTUAL,
	          __void__apply__osg_Vec2dArray_R1,
	          "",
	          "");
	I_Method1(void, apply, IN, osg::Vec3dArray &, array,
	          Properties::VIRTUAL,
	          __void__apply__osg_Vec3dArray_R1,
	          "",
	          "");
	I_Method1(void, apply, IN, osg::Vec4dArray &, array,
	          Properties::VIRTUAL,
	          __void__apply__osg_Vec4dArray_R1,
	          "",
	          "");
END_REFLECTOR

