// ***************************************************************************
//
//   Generated automatically by genwrapper.
//   Please DO NOT EDIT this file!
//
// ***************************************************************************

#include <osgIntrospection/ReflectionMacros>
#include <osgIntrospection/TypedMethodInfo>
#include <osgIntrospection/Attributes>

#include <osg/ColorMask>
#include <osg/CopyOp>
#include <osg/Matrix>
#include <osg/Object>
#include <osg/State>
#include <osg/StateAttribute>
#include <osg/Vec4>
#include <osg/Viewport>
#include <osgUtil/RenderBin>
#include <osgUtil/RenderLeaf>
#include <osgUtil/RenderStage>
#include <osgUtil/RenderStageLighting>
#include <osgUtil/Statistics>

BEGIN_OBJECT_REFLECTOR(osgUtil::RenderStage)
	BaseType(osgUtil::RenderBin);
	ConstructorWithDefaults1(IN, osgUtil::RenderBin::SortMode, mode, osgUtil::RenderBin::SORT_BY_STATE);
	ConstructorWithDefaults2(IN, const osgUtil::RenderStage &, rhs, , IN, const osg::CopyOp &, copyop, osg::CopyOp::SHALLOW_COPY);
	Method0(osg::Object *, cloneType);
	Method1(osg::Object *, clone, IN, const osg::CopyOp &, copyop);
	Method1(bool, isSameKindAs, IN, const osg::Object *, obj);
	Method0(const char *, className);
	Method0(void, reset);
	Method1(void, setViewport, IN, osg::Viewport *, viewport);
	Method0(const osg::Viewport *, getViewport);
	Method0(osg::Viewport *, getViewport);
	Method1(void, setClearMask, IN, GLbitfield, mask);
	Method0(GLbitfield, getClearMask);
	Method1(void, setColorMask, IN, osg::ColorMask *, cm);
	Method0(osg::ColorMask *, getColorMask);
	Method0(const osg::ColorMask *, getColorMask);
	Method1(void, setClearColor, IN, const osg::Vec4 &, color);
	Method0(const osg::Vec4 &, getClearColor);
	Method1(void, setClearAccum, IN, const osg::Vec4 &, color);
	Method0(const osg::Vec4 &, getClearAccum);
	Method1(void, setClearDepth, IN, double, depth);
	Method0(double, getClearDepth);
	Method1(void, setClearStencil, IN, int, stencil);
	Method0(int, getClearStencil);
	Method1(void, setRenderStageLighting, IN, osgUtil::RenderStageLighting *, rsl);
	Method0(osgUtil::RenderStageLighting *, getRenderStageLighting);
	Method2(void, addPositionedAttribute, IN, osg::RefMatrix *, matrix, IN, const osg::StateAttribute *, attr);
	Method3(void, addPositionedTextureAttribute, IN, unsigned int, textureUnit, IN, osg::RefMatrix *, matrix, IN, const osg::StateAttribute *, attr);
	Method2(void, drawPreRenderStages, IN, osg::State &, state, IN, osgUtil::RenderLeaf *&, previous);
	Method2(void, draw, IN, osg::State &, state, IN, osgUtil::RenderLeaf *&, previous);
	Method2(void, drawImplementation, IN, osg::State &, state, IN, osgUtil::RenderLeaf *&, previous);
	Method1(void, addToDependencyList, IN, osgUtil::RenderStage *, rs);
	Method1(bool, getStats, IN, osgUtil::Statistics *, primStats);
	Property(const osg::Vec4 &, ClearAccum);
	Property(const osg::Vec4 &, ClearColor);
	Property(double, ClearDepth);
	Property(GLbitfield, ClearMask);
	Property(int, ClearStencil);
	Property(osg::ColorMask *, ColorMask);
	Property(osgUtil::RenderStageLighting *, RenderStageLighting);
	Property(osg::Viewport *, Viewport);
END_REFLECTOR

