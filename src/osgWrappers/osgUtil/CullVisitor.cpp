// ***************************************************************************
//
//   Generated automatically by genwrapper.
//   Please DO NOT EDIT this file!
//
// ***************************************************************************

#include <osgIntrospection/ReflectionMacros>
#include <osgIntrospection/TypedMethodInfo>
#include <osgIntrospection/Attributes>

#include <osg/Billboard>
#include <osg/BoundingBox>
#include <osg/ClearNode>
#include <osg/ClipNode>
#include <osg/Drawable>
#include <osg/Geode>
#include <osg/Group>
#include <osg/LOD>
#include <osg/LightSource>
#include <osg/Matrix>
#include <osg/Matrixd>
#include <osg/Matrixf>
#include <osg/Node>
#include <osg/OccluderNode>
#include <osg/Polytope>
#include <osg/Projection>
#include <osg/State>
#include <osg/StateAttribute>
#include <osg/StateSet>
#include <osg/Switch>
#include <osg/TexGenNode>
#include <osg/Transform>
#include <osg/Vec3>
#include <osgUtil/CullVisitor>
#include <osgUtil/RenderBin>
#include <osgUtil/RenderGraph>
#include <osgUtil/RenderStage>

TYPE_NAME_ALIAS(osg::Matrix::value_type, osgUtil::CullVisitor::value_type);

BEGIN_VALUE_REFLECTOR(osgUtil::CullVisitor)
	BaseType(osg::NodeVisitor);
	BaseType(osg::CullStack);
	Constructor0();
	Method0(osgUtil::CullVisitor *, cloneType);
	Method0(void, reset);
	Method0(osg::Vec3, getEyePoint);
	Method2(float, getDistanceToEyePoint, IN, const osg::Vec3 &, pos, IN, bool, withLODScale);
	Method2(float, getDistanceFromEyePoint, IN, const osg::Vec3 &, pos, IN, bool, withLODScale);
	Method1(void, apply, IN, osg::Node &, x);
	Method1(void, apply, IN, osg::Geode &, node);
	Method1(void, apply, IN, osg::Billboard &, node);
	Method1(void, apply, IN, osg::LightSource &, node);
	Method1(void, apply, IN, osg::ClipNode &, node);
	Method1(void, apply, IN, osg::TexGenNode &, node);
	Method1(void, apply, IN, osg::Group &, node);
	Method1(void, apply, IN, osg::Transform &, node);
	Method1(void, apply, IN, osg::Projection &, node);
	Method1(void, apply, IN, osg::Switch &, node);
	Method1(void, apply, IN, osg::LOD &, node);
	Method1(void, apply, IN, osg::ClearNode &, node);
	Method1(void, apply, IN, osg::OccluderNode &, node);
	Method1(void, setClearNode, IN, const osg::ClearNode *, earthSky);
	Method0(const osg::ClearNode *, getClearNode);
	Method1(void, pushStateSet, IN, const osg::StateSet *, ss);
	Method0(void, popStateSet);
	Method1(void, setRenderGraph, IN, osgUtil::RenderGraph *, rg);
	Method0(osgUtil::RenderGraph *, getRootRenderGraph);
	Method0(osgUtil::RenderGraph *, getCurrentRenderGraph);
	Method1(void, setRenderStage, IN, osgUtil::RenderStage *, rg);
	Method0(osgUtil::RenderStage *, getRenderStage);
	Method0(osgUtil::RenderBin *, getCurrentRenderBin);
	Method1(void, setCurrentRenderBin, IN, osgUtil::RenderBin *, rb);
	Method0(osgUtil::CullVisitor::value_type, getCalculatedNearPlane);
	Method0(osgUtil::CullVisitor::value_type, getCalculatedFarPlane);
	Method3(osgUtil::CullVisitor::value_type, computeNearestPointInFrustum, IN, const osg::Matrix &, matrix, IN, const osg::Polytope::PlaneList &, planes, IN, const osg::Drawable &, drawable);
	Method2(bool, updateCalculatedNearFar, IN, const osg::Matrix &, matrix, IN, const osg::BoundingBox &, bb);
	MethodWithDefaults3(bool, updateCalculatedNearFar, IN, const osg::Matrix &, matrix, , IN, const osg::Drawable &, drawable, , IN, bool, isBillboard, false);
	Method1(void, updateCalculatedNearFar, IN, const osg::Vec3 &, pos);
	Method2(void, addDrawable, IN, osg::Drawable *, drawable, IN, osg::RefMatrix *, matrix);
	Method3(void, addDrawableAndDepth, IN, osg::Drawable *, drawable, IN, osg::RefMatrix *, matrix, IN, float, depth);
	Method2(void, addPositionedAttribute, IN, osg::RefMatrix *, matrix, IN, const osg::StateAttribute *, attr);
	Method3(void, addPositionedTextureAttribute, IN, unsigned int, textureUnit, IN, osg::RefMatrix *, matrix, IN, const osg::StateAttribute *, attr);
	Method0(void, popProjectionMatrix);
	Method3(bool, clampProjectionMatrixImplementation, IN, osg::Matrixf &, projection, IN, double &, znear, IN, double &, zfar);
	Method3(bool, clampProjectionMatrixImplementation, IN, osg::Matrixd &, projection, IN, double &, znear, IN, double &, zfar);
	Method3(bool, clampProjectionMatrix, IN, osg::Matrixf &, projection, IN, osgUtil::CullVisitor::value_type &, znear, IN, osgUtil::CullVisitor::value_type &, zfar);
	Method3(bool, clampProjectionMatrix, IN, osg::Matrixd &, projection, IN, osgUtil::CullVisitor::value_type &, znear, IN, osgUtil::CullVisitor::value_type &, zfar);
	Method1(void, setState, IN, osg::State *, state);
	Method0(osg::State *, getState);
	Method0(const osg::State *, getState);
	ReadOnlyProperty(osgUtil::CullVisitor::value_type, CalculatedFarPlane);
	ReadOnlyProperty(osgUtil::CullVisitor::value_type, CalculatedNearPlane);
	Property(const osg::ClearNode *, ClearNode);
	Property(osgUtil::RenderBin *, CurrentRenderBin);
	ReadOnlyProperty(osgUtil::RenderGraph *, CurrentRenderGraph);
	ReadOnlyProperty(osg::Vec3, EyePoint);
	WriteOnlyProperty(osgUtil::RenderGraph *, RenderGraph);
	Property(osgUtil::RenderStage *, RenderStage);
	ReadOnlyProperty(osgUtil::RenderGraph *, RootRenderGraph);
	Property(osg::State *, State);
END_REFLECTOR

