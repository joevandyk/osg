// ***************************************************************************
//
//   Generated automatically by genwrapper.
//   Please DO NOT EDIT this file!
//
// ***************************************************************************

#include <osgIntrospection/ReflectionMacros>
#include <osgIntrospection/TypedMethodInfo>
#include <osgIntrospection/Attributes>

#include <osg/Vec2>
#include <osg/Vec3>
#include <osg/Vec4>
#include <osgUtil/Statistics>

TYPE_NAME_ALIAS(std::pair< unsigned int COMMA  unsigned int >, osgUtil::Statistics::PrimitivePair);

TYPE_NAME_ALIAS(std::map< GLenum COMMA  osgUtil::Statistics::PrimitivePair >, osgUtil::Statistics::PrimtiveValueMap);

TYPE_NAME_ALIAS(std::map< GLenum COMMA  unsigned int >, osgUtil::Statistics::PrimtiveCountMap);

BEGIN_ENUM_REFLECTOR(osgUtil::Statistics::statsType)
	EnumLabel(osgUtil::Statistics::STAT_NONE);
	EnumLabel(osgUtil::Statistics::STAT_FRAMERATE);
	EnumLabel(osgUtil::Statistics::STAT_GRAPHS);
	EnumLabel(osgUtil::Statistics::STAT_PRIMS);
	EnumLabel(osgUtil::Statistics::STAT_PRIMSPERVIEW);
	EnumLabel(osgUtil::Statistics::STAT_PRIMSPERBIN);
	EnumLabel(osgUtil::Statistics::STAT_DC);
	EnumLabel(osgUtil::Statistics::STAT_RESTART);
END_REFLECTOR

BEGIN_VALUE_REFLECTOR(osgUtil::Statistics)
	BaseType(osg::PrimitiveFunctor);
	Constructor0();
	Method0(void, reset);
	Method1(void, setType, IN, osgUtil::Statistics::statsType, t);
	Method2(void, setVertexArray, IN, unsigned int, count, IN, const osg::Vec3 *, x);
	Method2(void, setVertexArray, IN, unsigned int, count, IN, const osg::Vec2 *, x);
	Method2(void, setVertexArray, IN, unsigned int, count, IN, const osg::Vec4 *, x);
	Method3(void, drawArrays, IN, GLenum, mode, IN, GLint, x, IN, GLsizei, count);
	Method3(void, drawElements, IN, GLenum, mode, IN, GLsizei, count, IN, const GLubyte *, x);
	Method3(void, drawElements, IN, GLenum, mode, IN, GLsizei, count, IN, const GLushort *, x);
	Method3(void, drawElements, IN, GLenum, mode, IN, GLsizei, count, IN, const GLuint *, x);
	Method1(void, begin, IN, GLenum, mode);
	Method0(void, vertex);
	Method3(void, vertex, IN, float, x, IN, float, x, IN, float, x);
	Method1(void, vertex, IN, const osg::Vec3 &, x);
	Method1(void, vertex, IN, const osg::Vec2 &, x);
	Method1(void, vertex, IN, const osg::Vec4 &, x);
	Method2(void, vertex, IN, float, x, IN, float, x);
	Method4(void, vertex, IN, float, x, IN, float, x, IN, float, x, IN, float, x);
	Method0(void, end);
	Method0(void, addDrawable);
	Method0(void, addMatrix);
	Method1(void, addLight, IN, int, np);
	Method1(void, addImpostor, IN, int, np);
	Method0(int, getBins);
	Method1(void, setDepth, IN, int, d);
	Method1(void, addBins, IN, int, np);
	Method1(void, setBinNo, IN, int, n);
	Method0(PrimtiveCountMap::iterator, GetPrimitivesBegin);
	Method0(PrimtiveCountMap::iterator, GetPrimitivesEnd);
	WriteOnlyProperty(int, BinNo);
	ReadOnlyProperty(int, Bins);
	WriteOnlyProperty(int, Depth);
	WriteOnlyProperty(osgUtil::Statistics::statsType, Type);
END_REFLECTOR

STD_MAP_REFLECTOR(std::map< GLenum COMMA  osgUtil::Statistics::PrimitivePair >);

STD_MAP_REFLECTOR(std::map< GLenum COMMA  unsigned int >);

STD_PAIR_REFLECTOR(std::pair< unsigned int COMMA  unsigned int >);

