// ***************************************************************************
//
//   Generated automatically by genwrapper.
//   Please DO NOT EDIT this file!
//
// ***************************************************************************

#include <osgIntrospection/ReflectionMacros>
#include <osgIntrospection/TypedMethodInfo>
#include <osgIntrospection/StaticMethodInfo>
#include <osgIntrospection/Attributes>

#include <osg/Node>
#include <osgUtil/SceneGraphBuilder>

// Must undefine IN and OUT macros defined in Windows headers
#ifdef IN
#undef IN
#endif
#ifdef OUT
#undef OUT
#endif

BEGIN_VALUE_REFLECTOR(osgUtil::SceneGraphBuilder)
	I_DeclaringFile("osgUtil/SceneGraphBuilder");
	I_Constructor0(____SceneGraphBuilder,
	               "",
	               "");
	I_Method0(void, glPushMatrix,
	          Properties::NON_VIRTUAL,
	          __void__glPushMatrix,
	          "",
	          "");
	I_Method0(void, glPopMatrix,
	          Properties::NON_VIRTUAL,
	          __void__glPopMatrix,
	          "",
	          "");
	I_Method0(void, glLoadIdentity,
	          Properties::NON_VIRTUAL,
	          __void__glLoadIdentity,
	          "",
	          "");
	I_Method1(void, glLoadMatrixd, IN, const GLdouble *, m,
	          Properties::NON_VIRTUAL,
	          __void__glLoadMatrixd__C5_GLdouble_P1,
	          "",
	          "");
	I_Method1(void, glMultMatrixd, IN, const GLdouble *, m,
	          Properties::NON_VIRTUAL,
	          __void__glMultMatrixd__C5_GLdouble_P1,
	          "",
	          "");
	I_Method3(void, glTranslated, IN, GLdouble, x, IN, GLdouble, y, IN, GLdouble, z,
	          Properties::NON_VIRTUAL,
	          __void__glTranslated__GLdouble__GLdouble__GLdouble,
	          "",
	          "");
	I_Method3(void, glScaled, IN, GLdouble, x, IN, GLdouble, y, IN, GLdouble, z,
	          Properties::NON_VIRTUAL,
	          __void__glScaled__GLdouble__GLdouble__GLdouble,
	          "",
	          "");
	I_Method4(void, glRotated, IN, GLdouble, angle, IN, GLdouble, x, IN, GLdouble, y, IN, GLdouble, z,
	          Properties::NON_VIRTUAL,
	          __void__glRotated__GLdouble__GLdouble__GLdouble__GLdouble,
	          "",
	          "");
	I_Method2(void, glBlendFunc, IN, GLenum, srcFactor, IN, GLenum, dstFactor,
	          Properties::NON_VIRTUAL,
	          __void__glBlendFunc__GLenum__GLenum,
	          "",
	          "");
	I_Method1(void, glCullFace, IN, GLenum, mode,
	          Properties::NON_VIRTUAL,
	          __void__glCullFace__GLenum,
	          "",
	          "");
	I_Method1(void, glDepthFunc, IN, GLenum, mode,
	          Properties::NON_VIRTUAL,
	          __void__glDepthFunc__GLenum,
	          "",
	          "");
	I_Method1(void, glFrontFace, IN, GLenum, mode,
	          Properties::NON_VIRTUAL,
	          __void__glFrontFace__GLenum,
	          "",
	          "");
	I_Method2(void, glLineStipple, IN, GLint, factor, IN, GLushort, pattern,
	          Properties::NON_VIRTUAL,
	          __void__glLineStipple__GLint__GLushort,
	          "",
	          "");
	I_Method1(void, glLineWidth, IN, GLfloat, lineWidth,
	          Properties::NON_VIRTUAL,
	          __void__glLineWidth__GLfloat,
	          "",
	          "");
	I_Method1(void, glPointSize, IN, GLfloat, pointSize,
	          Properties::NON_VIRTUAL,
	          __void__glPointSize__GLfloat,
	          "",
	          "");
	I_Method2(void, glPolygonMode, IN, GLenum, face, IN, GLenum, mode,
	          Properties::NON_VIRTUAL,
	          __void__glPolygonMode__GLenum__GLenum,
	          "",
	          "");
	I_Method2(void, glPolygonOffset, IN, GLfloat, factor, IN, GLfloat, units,
	          Properties::NON_VIRTUAL,
	          __void__glPolygonOffset__GLfloat__GLfloat,
	          "",
	          "");
	I_Method1(void, glPolygonStipple, IN, const GLubyte *, mask,
	          Properties::NON_VIRTUAL,
	          __void__glPolygonStipple__C5_GLubyte_P1,
	          "",
	          "");
	I_Method1(void, glShadeModel, IN, GLenum, mode,
	          Properties::NON_VIRTUAL,
	          __void__glShadeModel__GLenum,
	          "",
	          "");
	I_Method1(void, glEnable, IN, GLenum, mode,
	          Properties::NON_VIRTUAL,
	          __void__glEnable__GLenum,
	          "",
	          "");
	I_Method1(void, glDisable, IN, GLenum, mode,
	          Properties::NON_VIRTUAL,
	          __void__glDisable__GLenum,
	          "",
	          "");
	I_Method4(void, glColor4f, IN, GLfloat, red, IN, GLfloat, green, IN, GLfloat, blue, IN, GLfloat, alpha,
	          Properties::NON_VIRTUAL,
	          __void__glColor4f__GLfloat__GLfloat__GLfloat__GLfloat,
	          "",
	          "");
	I_Method1(void, glColor4fv, IN, GLfloat *, c,
	          Properties::NON_VIRTUAL,
	          __void__glColor4fv__GLfloat_P1,
	          "",
	          "");
	I_Method3(void, glVertex3f, IN, GLfloat, x, IN, GLfloat, y, IN, GLfloat, z,
	          Properties::NON_VIRTUAL,
	          __void__glVertex3f__GLfloat__GLfloat__GLfloat,
	          "",
	          "");
	I_Method1(void, glVertex3fv, IN, GLfloat *, v,
	          Properties::NON_VIRTUAL,
	          __void__glVertex3fv__GLfloat_P1,
	          "",
	          "");
	I_Method3(void, glNormal3f, IN, GLfloat, x, IN, GLfloat, y, IN, GLfloat, z,
	          Properties::NON_VIRTUAL,
	          __void__glNormal3f__GLfloat__GLfloat__GLfloat,
	          "",
	          "");
	I_Method1(void, glNormal3fv, IN, GLfloat *, n,
	          Properties::NON_VIRTUAL,
	          __void__glNormal3fv__GLfloat_P1,
	          "",
	          "");
	I_Method1(void, glTexCoord1f, IN, GLfloat, x,
	          Properties::NON_VIRTUAL,
	          __void__glTexCoord1f__GLfloat,
	          "",
	          "");
	I_Method1(void, glTexCoord1fv, IN, GLfloat *, tc,
	          Properties::NON_VIRTUAL,
	          __void__glTexCoord1fv__GLfloat_P1,
	          "",
	          "");
	I_Method2(void, glTexCoord2f, IN, GLfloat, x, IN, GLfloat, y,
	          Properties::NON_VIRTUAL,
	          __void__glTexCoord2f__GLfloat__GLfloat,
	          "",
	          "");
	I_Method1(void, glTexCoord2fv, IN, GLfloat *, tc,
	          Properties::NON_VIRTUAL,
	          __void__glTexCoord2fv__GLfloat_P1,
	          "",
	          "");
	I_Method3(void, glTexCoord3f, IN, GLfloat, x, IN, GLfloat, y, IN, GLfloat, z,
	          Properties::NON_VIRTUAL,
	          __void__glTexCoord3f__GLfloat__GLfloat__GLfloat,
	          "",
	          "");
	I_Method1(void, glTexCoord3fv, IN, GLfloat *, tc,
	          Properties::NON_VIRTUAL,
	          __void__glTexCoord3fv__GLfloat_P1,
	          "",
	          "");
	I_Method4(void, glTexCoord4f, IN, GLfloat, x, IN, GLfloat, y, IN, GLfloat, z, IN, GLfloat, w,
	          Properties::NON_VIRTUAL,
	          __void__glTexCoord4f__GLfloat__GLfloat__GLfloat__GLfloat,
	          "",
	          "");
	I_Method1(void, glTexCoord4fv, IN, GLfloat *, tc,
	          Properties::NON_VIRTUAL,
	          __void__glTexCoord4fv__GLfloat_P1,
	          "",
	          "");
	I_Method1(void, glBegin, IN, GLenum, mode,
	          Properties::NON_VIRTUAL,
	          __void__glBegin__GLenum,
	          "",
	          "");
	I_Method0(void, glEnd,
	          Properties::NON_VIRTUAL,
	          __void__glEnd,
	          "",
	          "");
	I_Method1(void, gluQuadricDrawStyle, IN, GLenum, aDrawStyle,
	          Properties::NON_VIRTUAL,
	          __void__gluQuadricDrawStyle__GLenum,
	          "",
	          "");
	I_Method1(void, gluQuadricNormals, IN, GLenum, aNormals,
	          Properties::NON_VIRTUAL,
	          __void__gluQuadricNormals__GLenum,
	          "",
	          "");
	I_Method1(void, gluQuadricOrientation, IN, GLenum, aOrientation,
	          Properties::NON_VIRTUAL,
	          __void__gluQuadricOrientation__GLenum,
	          "",
	          "");
	I_Method1(void, gluQuadricTexture, IN, GLboolean, aTexture,
	          Properties::NON_VIRTUAL,
	          __void__gluQuadricTexture__GLboolean,
	          "",
	          "");
	I_Method5(void, gluCylinder, IN, GLfloat, aBase, IN, GLfloat, aTop, IN, GLfloat, aHeight, IN, GLint, aSlices, IN, GLint, aStacks,
	          Properties::NON_VIRTUAL,
	          __void__gluCylinder__GLfloat__GLfloat__GLfloat__GLint__GLint,
	          "",
	          "");
	I_Method4(void, gluDisk, IN, GLfloat, aInner, IN, GLfloat, aOuter, IN, GLint, aSlices, IN, GLint, aLoops,
	          Properties::NON_VIRTUAL,
	          __void__gluDisk__GLfloat__GLfloat__GLint__GLint,
	          "",
	          "");
	I_Method6(void, gluPartialDisk, IN, GLfloat, aInner, IN, GLfloat, aOuter, IN, GLint, aSlices, IN, GLint, aLoops, IN, GLfloat, aStart, IN, GLfloat, aSweep,
	          Properties::NON_VIRTUAL,
	          __void__gluPartialDisk__GLfloat__GLfloat__GLint__GLint__GLfloat__GLfloat,
	          "",
	          "");
	I_Method3(void, gluSphere, IN, GLfloat, aRadius, IN, GLint, aSlices, IN, GLint, aStacks,
	          Properties::NON_VIRTUAL,
	          __void__gluSphere__GLfloat__GLint__GLint,
	          "",
	          "");
	I_Method0(osg::Node *, getScene,
	          Properties::NON_VIRTUAL,
	          __osg_Node_P1__getScene,
	          "",
	          "");
	I_Method0(osg::Node *, takeScene,
	          Properties::NON_VIRTUAL,
	          __osg_Node_P1__takeScene,
	          "",
	          "");
	I_ProtectedMethod0(void, matrixChanged,
	                   Properties::NON_VIRTUAL,
	                   Properties::NON_CONST,
	                   __void__matrixChanged,
	                   "",
	                   "");
	I_ProtectedMethod1(void, addAttribute, IN, osg::StateAttribute *, attribute,
	                   Properties::NON_VIRTUAL,
	                   Properties::NON_CONST,
	                   __void__addAttribute__osg_StateAttribute_P1,
	                   "",
	                   "");
	I_ProtectedMethod2(void, addMode, IN, GLenum, mode, IN, bool, enabled,
	                   Properties::NON_VIRTUAL,
	                   Properties::NON_CONST,
	                   __void__addMode__GLenum__bool,
	                   "",
	                   "");
	I_ProtectedMethod2(void, addTextureAttribute, IN, unsigned int, unit, IN, osg::StateAttribute *, attribute,
	                   Properties::NON_VIRTUAL,
	                   Properties::NON_CONST,
	                   __void__addTextureAttribute__unsigned_int__osg_StateAttribute_P1,
	                   "",
	                   "");
	I_ProtectedMethod3(void, addTextureMode, IN, unsigned int, unit, IN, GLenum, mode, IN, bool, enabled,
	                   Properties::NON_VIRTUAL,
	                   Properties::NON_CONST,
	                   __void__addTextureMode__unsigned_int__GLenum__bool,
	                   "",
	                   "");
	I_ProtectedMethod1(void, addShape, IN, osg::Shape *, shape,
	                   Properties::NON_VIRTUAL,
	                   Properties::NON_CONST,
	                   __void__addShape__osg_Shape_P1,
	                   "",
	                   "");
	I_ProtectedMethod1(void, addDrawable, IN, osg::Drawable *, drawable,
	                   Properties::NON_VIRTUAL,
	                   Properties::NON_CONST,
	                   __void__addDrawable__osg_Drawable_P1,
	                   "",
	                   "");
	I_ProtectedMethod0(void, newGeometry,
	                   Properties::NON_VIRTUAL,
	                   Properties::NON_CONST,
	                   __void__newGeometry,
	                   "",
	                   "");
	I_ProtectedMethod0(void, allocateGeometry,
	                   Properties::NON_VIRTUAL,
	                   Properties::NON_CONST,
	                   __void__allocateGeometry,
	                   "",
	                   "");
	I_ProtectedMethod0(void, completeGeometry,
	                   Properties::NON_VIRTUAL,
	                   Properties::NON_CONST,
	                   __void__completeGeometry,
	                   "",
	                   "");
	I_ProtectedMethod0(void, allocateStateSet,
	                   Properties::NON_VIRTUAL,
	                   Properties::NON_CONST,
	                   __void__allocateStateSet,
	                   "",
	                   "");
	I_SimpleProperty(osg::Node *, Scene, 
	                 __osg_Node_P1__getScene, 
	                 0);
END_REFLECTOR

