// ***************************************************************************
//
//   Generated automatically by genwrapper.
//   Please DO NOT EDIT this file!
//
// ***************************************************************************

#include <osgIntrospection/ReflectionMacros>
#include <osgIntrospection/TypedMethodInfo>
#include <osgIntrospection/Attributes>

#include <osg/CollectOccludersVisitor>
#include <osg/DisplaySettings>
#include <osg/FrameStamp>
#include <osg/Light>
#include <osg/Matrixd>
#include <osg/Matrixf>
#include <osg/Node>
#include <osg/NodeVisitor>
#include <osg/State>
#include <osg/StateSet>
#include <osg/Vec3>
#include <osg/Vec4>
#include <osg/Viewport>
#include <osgUtil/CullVisitor>
#include <osgUtil/RenderGraph>
#include <osgUtil/RenderStage>
#include <osgUtil/SceneView>

TYPE_NAME_ALIAS(osgUtil::SceneView::Options, osgUtil::SceneView::LightingMode);

BEGIN_ENUM_REFLECTOR(osgUtil::SceneView::Options)
	EnumLabel(osgUtil::SceneView::NO_SCENEVIEW_LIGHT);
	EnumLabel(osgUtil::SceneView::HEADLIGHT);
	EnumLabel(osgUtil::SceneView::SKY_LIGHT);
	EnumLabel(osgUtil::SceneView::COMPILE_GLOBJECTS_AT_INIT);
	EnumLabel(osgUtil::SceneView::STANDARD_SETTINGS);
END_REFLECTOR

BEGIN_ENUM_REFLECTOR(osgUtil::SceneView::ActiveUniforms)
	EnumLabel(osgUtil::SceneView::FRAME_NUMBER_UNIFORM);
	EnumLabel(osgUtil::SceneView::FRAME_TIME_UNIFORM);
	EnumLabel(osgUtil::SceneView::DELTA_FRAME_TIME_UNIFORM);
	EnumLabel(osgUtil::SceneView::VIEW_MATRIX_UNIFORM);
	EnumLabel(osgUtil::SceneView::INVERSE_VIEW_MATRIX_UNIFORM);
	EnumLabel(osgUtil::SceneView::DEFAULT_UNIFORMS);
	EnumLabel(osgUtil::SceneView::ALL_UNIFORMS);
END_REFLECTOR

BEGIN_ENUM_REFLECTOR(osgUtil::SceneView::FusionDistanceMode)
	EnumLabel(osgUtil::SceneView::USE_FUSION_DISTANCE_VALUE);
	EnumLabel(osgUtil::SceneView::PROPORTIONAL_TO_SCREEN_DISTANCE);
END_REFLECTOR

BEGIN_OBJECT_REFLECTOR(osgUtil::SceneView)
	BaseType(osg::Referenced);
	BaseType(osg::CullSettings);
	ConstructorWithDefaults1(IN, osg::DisplaySettings *, ds, NULL);
	MethodWithDefaults1(void, setDefaults, IN, unsigned int, options, osgUtil::SceneView::STANDARD_SETTINGS);
	Method1(void, setSceneData, IN, osg::Node *, node);
	Method0(osg::Node *, getSceneData);
	Method0(const osg::Node *, getSceneData);
	Method1(void, setViewport, IN, osg::Viewport *, viewport);
	Method4(void, setViewport, IN, int, x, IN, int, y, IN, int, width, IN, int, height);
	Method0(const osg::Viewport *, getViewport);
	Method0(osg::Viewport *, getViewport);
	Method4(void, getViewport, IN, int &, x, IN, int &, y, IN, int &, width, IN, int &, height);
	Method1(void, setDisplaySettings, IN, osg::DisplaySettings *, vs);
	Method0(const osg::DisplaySettings *, getDisplaySettings);
	Method0(osg::DisplaySettings *, getDisplaySettings);
	Method1(void, setClearColor, IN, const osg::Vec4 &, color);
	Method0(const osg::Vec4 &, getClearColor);
	Method1(void, setGlobalStateSet, IN, osg::StateSet *, state);
	Method0(osg::StateSet *, getGlobalStateSet);
	Method0(const osg::StateSet *, getGlobalStateSet);
	Method1(void, setLocalStateSet, IN, osg::StateSet *, state);
	Method0(osg::StateSet *, getLocalStateSet);
	Method0(const osg::StateSet *, getLocalStateSet);
	Method1(void, setActiveUniforms, IN, int, activeUniforms);
	Method1(int, getActiveUniforms, IN, int, activeUniforms);
	Method0(void, updateUniforms);
	Method1(void, setLightingMode, IN, osgUtil::SceneView::LightingMode, mode);
	Method0(osgUtil::SceneView::LightingMode, getLightingMode);
	Method1(void, setLight, IN, osg::Light *, light);
	Method0(osg::Light *, getLight);
	Method0(const osg::Light *, getLight);
	Method1(void, setState, IN, osg::State *, state);
	Method0(osg::State *, getState);
	Method0(const osg::State *, getState);
	Method1(void, setProjectionMatrix, IN, const osg::Matrixf &, matrix);
	Method1(void, setProjectionMatrix, IN, const osg::Matrixd &, matrix);
	Method6(void, setProjectionMatrixAsOrtho, IN, double, left, IN, double, right, IN, double, bottom, IN, double, top, IN, double, zNear, IN, double, zFar);
	Method4(void, setProjectionMatrixAsOrtho2D, IN, double, left, IN, double, right, IN, double, bottom, IN, double, top);
	Method6(void, setProjectionMatrixAsFrustum, IN, double, left, IN, double, right, IN, double, bottom, IN, double, top, IN, double, zNear, IN, double, zFar);
	Method4(void, setProjectionMatrixAsPerspective, IN, double, fovy, IN, double, aspectRatio, IN, double, zNear, IN, double, zFar);
	Method0(osg::Matrixd &, getProjectionMatrix);
	Method0(const osg::Matrixd &, getProjectionMatrix);
	Method6(bool, getProjectionMatrixAsOrtho, IN, double &, left, IN, double &, right, IN, double &, bottom, IN, double &, top, IN, double &, zNear, IN, double &, zFar);
	Method6(bool, getProjectionMatrixAsFrustum, IN, double &, left, IN, double &, right, IN, double &, bottom, IN, double &, top, IN, double &, zNear, IN, double &, zFar);
	Method4(bool, getProjectionMatrixAsPerspective, IN, double &, fovy, IN, double &, aspectRatio, IN, double &, zNear, IN, double &, zFar);
	Method1(void, setViewMatrix, IN, const osg::Matrixf &, matrix);
	Method1(void, setViewMatrix, IN, const osg::Matrixd &, matrix);
	Method3(void, setViewMatrixAsLookAt, IN, const osg::Vec3 &, eye, IN, const osg::Vec3 &, center, IN, const osg::Vec3 &, up);
	Method0(osg::Matrixd &, getViewMatrix);
	Method0(const osg::Matrixd &, getViewMatrix);
	MethodWithDefaults4(void, getViewMatrixAsLookAt, IN, osg::Vec3 &, eye, , IN, osg::Vec3 &, center, , IN, osg::Vec3 &, up, , IN, float, lookDistance, 1.0f);
	Method1(void, setInitVisitor, IN, osg::NodeVisitor *, av);
	Method0(osg::NodeVisitor *, getInitVisitor);
	Method0(const osg::NodeVisitor *, getInitVisitor);
	Method1(void, setUpdateVisitor, IN, osg::NodeVisitor *, av);
	Method0(osg::NodeVisitor *, getUpdateVisitor);
	Method0(const osg::NodeVisitor *, getUpdateVisitor);
	Method1(void, setCullVisitor, IN, osgUtil::CullVisitor *, cv);
	Method0(osgUtil::CullVisitor *, getCullVisitor);
	Method0(const osgUtil::CullVisitor *, getCullVisitor);
	Method1(void, setCullVisitorLeft, IN, osgUtil::CullVisitor *, cv);
	Method0(osgUtil::CullVisitor *, getCullVisitorLeft);
	Method0(const osgUtil::CullVisitor *, getCullVisitorLeft);
	Method1(void, setCullVisitorRight, IN, osgUtil::CullVisitor *, cv);
	Method0(osgUtil::CullVisitor *, getCullVisitorRight);
	Method0(const osgUtil::CullVisitor *, getCullVisitorRight);
	Method1(void, setCollectOccludersVisitor, IN, osg::CollectOccludersVisitor *, cov);
	Method0(osg::CollectOccludersVisitor *, getCollectOccludersVisitor);
	Method0(const osg::CollectOccludersVisitor *, getCollectOccludersVisitor);
	Method1(void, setRenderGraph, IN, osgUtil::RenderGraph *, rg);
	Method0(osgUtil::RenderGraph *, getRenderGraph);
	Method0(const osgUtil::RenderGraph *, getRenderGraph);
	Method1(void, setRenderGraphLeft, IN, osgUtil::RenderGraph *, rg);
	Method0(osgUtil::RenderGraph *, getRenderGraphLeft);
	Method0(const osgUtil::RenderGraph *, getRenderGraphLeft);
	Method1(void, setRenderGraphRight, IN, osgUtil::RenderGraph *, rg);
	Method0(osgUtil::RenderGraph *, getRenderGraphRight);
	Method0(const osgUtil::RenderGraph *, getRenderGraphRight);
	Method1(void, setRenderStage, IN, osgUtil::RenderStage *, rs);
	Method0(osgUtil::RenderStage *, getRenderStage);
	Method0(const osgUtil::RenderStage *, getRenderStage);
	Method1(void, setRenderStageLeft, IN, osgUtil::RenderStage *, rs);
	Method0(osgUtil::RenderStage *, getRenderStageLeft);
	Method0(const osgUtil::RenderStage *, getRenderStageLeft);
	Method1(void, setRenderStageRight, IN, osgUtil::RenderStage *, rs);
	Method0(osgUtil::RenderStage *, getRenderStageRight);
	Method0(const osgUtil::RenderStage *, getRenderStageRight);
	Method1(void, setDrawBufferValue, IN, GLenum, drawBufferValue);
	Method0(GLenum, getDrawBufferValue);
	MethodWithDefaults2(void, setFusionDistance, IN, osgUtil::SceneView::FusionDistanceMode, mode, , IN, float, value, 1.0f);
	Method0(osgUtil::SceneView::FusionDistanceMode, getFusionDistanceMode);
	Method0(float, getFusionDistanceValue);
	Method1(void, setPrioritizeTextures, IN, bool, pt);
	Method0(bool, getPrioritizeTextures);
	Method1(void, setComputeStereoMatricesCallback, IN, osgUtil::SceneView::ComputeStereoMatricesCallback *, callback);
	Method0(osgUtil::SceneView::ComputeStereoMatricesCallback *, getComputeStereoMatricesCallback);
	Method0(const osgUtil::SceneView::ComputeStereoMatricesCallback *, getComputeStereoMatricesCallback);
	Method2(bool, projectWindowIntoObject, IN, const osg::Vec3 &, window, IN, osg::Vec3 &, object);
	Method4(bool, projectWindowXYIntoObject, IN, int, x, IN, int, y, IN, osg::Vec3 &, near_point, IN, osg::Vec3 &, far_point);
	Method2(bool, projectObjectIntoWindow, IN, const osg::Vec3 &, object, IN, osg::Vec3 &, window);
	Method1(void, setFrameStamp, IN, osg::FrameStamp *, fs);
	Method0(const osg::FrameStamp *, getFrameStamp);
	Method1(osg::Matrixd, computeLeftEyeProjection, IN, const osg::Matrixd &, projection);
	Method1(osg::Matrixd, computeLeftEyeView, IN, const osg::Matrixd &, view);
	Method1(osg::Matrixd, computeRightEyeProjection, IN, const osg::Matrixd &, projection);
	Method1(osg::Matrixd, computeRightEyeView, IN, const osg::Matrixd &, view);
	Method1(osg::Matrixd, computeLeftEyeProjectionImplementation, IN, const osg::Matrixd &, projection);
	Method1(osg::Matrixd, computeLeftEyeViewImplementation, IN, const osg::Matrixd &, view);
	Method1(osg::Matrixd, computeRightEyeProjectionImplementation, IN, const osg::Matrixd &, projection);
	Method1(osg::Matrixd, computeRightEyeViewImplementation, IN, const osg::Matrixd &, view);
	Method0(void, init);
	Method0(void, update);
	Method0(void, cull);
	Method0(void, draw);
	Method0(void, releaseAllGLObjects);
	Method0(void, flushAllDeletedGLObjects);
	Method1(void, flushDeletedGLObjects, IN, double &, availableTime);
	WriteOnlyProperty(int, ActiveUniforms);
	Property(const osg::Vec4 &, ClearColor);
	Property(osg::CollectOccludersVisitor *, CollectOccludersVisitor);
	Property(osgUtil::SceneView::ComputeStereoMatricesCallback *, ComputeStereoMatricesCallback);
	Property(osgUtil::CullVisitor *, CullVisitor);
	Property(osgUtil::CullVisitor *, CullVisitorLeft);
	Property(osgUtil::CullVisitor *, CullVisitorRight);
	WriteOnlyProperty(unsigned int, Defaults);
	Property(osg::DisplaySettings *, DisplaySettings);
	Property(GLenum, DrawBufferValue);
	WriteOnlyProperty(osg::FrameStamp *, FrameStamp);
	ReadOnlyProperty(osgUtil::SceneView::FusionDistanceMode, FusionDistanceMode);
	ReadOnlyProperty(float, FusionDistanceValue);
	Property(osg::StateSet *, GlobalStateSet);
	Property(osg::NodeVisitor *, InitVisitor);
	Property(osg::Light *, Light);
	Property(osgUtil::SceneView::LightingMode, LightingMode);
	Property(osg::StateSet *, LocalStateSet);
	Property(bool, PrioritizeTextures);
	Property(const osg::Matrixd &, ProjectionMatrix);
	Property(osgUtil::RenderGraph *, RenderGraph);
	Property(osgUtil::RenderGraph *, RenderGraphLeft);
	Property(osgUtil::RenderGraph *, RenderGraphRight);
	Property(osgUtil::RenderStage *, RenderStage);
	Property(osgUtil::RenderStage *, RenderStageLeft);
	Property(osgUtil::RenderStage *, RenderStageRight);
	Property(osg::Node *, SceneData);
	Property(osg::State *, State);
	Property(osg::NodeVisitor *, UpdateVisitor);
	Property(const osg::Matrixd &, ViewMatrix);
	Property(osg::Viewport *, Viewport);
END_REFLECTOR

BEGIN_ABSTRACT_OBJECT_REFLECTOR(osgUtil::SceneView::ComputeStereoMatricesCallback)
	BaseType(osg::Referenced);
	Constructor0();
	Method1(osg::Matrixd, computeLeftEyeProjection, IN, const osg::Matrixd &, projection);
	Method1(osg::Matrixd, computeLeftEyeView, IN, const osg::Matrixd &, view);
	Method1(osg::Matrixd, computeRightEyeProjection, IN, const osg::Matrixd &, projection);
	Method1(osg::Matrixd, computeRightEyeView, IN, const osg::Matrixd &, view);
END_REFLECTOR

