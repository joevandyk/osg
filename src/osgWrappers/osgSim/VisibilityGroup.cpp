// ***************************************************************************
//
//   Generated automatically by genwrapper.
//   Please DO NOT EDIT this file!
//
// ***************************************************************************

#include <osgIntrospection/ReflectionMacros>
#include <osgIntrospection/TypedMethodInfo>
#include <osgIntrospection/Attributes>

#include <osg/CopyOp>
#include <osg/Node>
#include <osg/NodeVisitor>
#include <osg/Object>
#include <osgSim/VisibilityGroup>

BEGIN_OBJECT_REFLECTOR(osgSim::VisibilityGroup)
	BaseType(osg::Group);
	Constructor0();
	ConstructorWithDefaults2(IN, const osgSim::VisibilityGroup &, x, , IN, const osg::CopyOp &, copyop, osg::CopyOp::SHALLOW_COPY);
	Method0(osg::Object *, cloneType);
	Method1(osg::Object *, clone, IN, const osg::CopyOp &, copyop);
	Method1(bool, isSameKindAs, IN, const osg::Object *, obj);
	Method0(const char *, className);
	Method0(const char *, libraryName);
	Method1(void, accept, IN, osg::NodeVisitor &, nv);
	Method1(void, traverse, IN, osg::NodeVisitor &, nv);
	Method1(void, setVisibilityVolume, IN, osg::Node *, node);
	Method0(osg::Node *, getVisibilityVolume);
	Method0(const osg::Node *, getVisibilityVolume);
	Method1(void, setVolumeIntersectionMask, IN, osg::Node::NodeMask, mask);
	Method0(osg::Node::NodeMask, getVolumeIntersectionMask);
	Method1(void, setSegmentLength, IN, float, length);
	Method0(float, getSegmentLength);
	Property(float, SegmentLength);
	Property(osg::Node *, VisibilityVolume);
	Property(osg::Node::NodeMask, VolumeIntersectionMask);
END_REFLECTOR

