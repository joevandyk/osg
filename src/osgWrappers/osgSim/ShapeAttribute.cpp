// ***************************************************************************
//
//   Generated automatically by genwrapper.
//   Please DO NOT EDIT this file!
//
// ***************************************************************************

#include <osgIntrospection/ReflectionMacros>
#include <osgIntrospection/TypedMethodInfo>
#include <osgIntrospection/StaticMethodInfo>
#include <osgIntrospection/Attributes>

#include <osg/CopyOp>
#include <osg/Object>
#include <osgSim/ShapeAttribute>

// Must undefine IN and OUT macros defined in Windows headers
#ifdef IN
#undef IN
#endif
#ifdef OUT
#undef OUT
#endif

BEGIN_ENUM_REFLECTOR(osgSim::ShapeAttribute::Type)
	I_DeclaringFile("osgSim/ShapeAttribute");
	I_EnumLabel(osgSim::ShapeAttribute::UNKNOW);
	I_EnumLabel(osgSim::ShapeAttribute::INTEGER);
	I_EnumLabel(osgSim::ShapeAttribute::DOUBLE);
	I_EnumLabel(osgSim::ShapeAttribute::STRING);
END_REFLECTOR

BEGIN_VALUE_REFLECTOR(osgSim::ShapeAttribute)
	I_DeclaringFile("osgSim/ShapeAttribute");
	I_Constructor0(____ShapeAttribute,
	               "",
	               "");
	I_Constructor1(IN, const char *, name,
	               Properties::NON_EXPLICIT,
	               ____ShapeAttribute__C5_char_P1,
	               "",
	               "");
	I_Constructor2(IN, const char *, name, IN, int, value,
	               ____ShapeAttribute__C5_char_P1__int,
	               "",
	               "");
	I_Constructor2(IN, const char *, name, IN, double, value,
	               ____ShapeAttribute__C5_char_P1__double,
	               "",
	               "");
	I_Constructor2(IN, const char *, name, IN, const char *, value,
	               ____ShapeAttribute__C5_char_P1__C5_char_P1,
	               "Note, ShapeAttribute takes a copy of both name and value, the calling code should manage its own clean up of the original strings. ",
	               "");
	I_Constructor1(IN, const osgSim::ShapeAttribute &, sa,
	               Properties::NON_EXPLICIT,
	               ____ShapeAttribute__C5_ShapeAttribute_R1,
	               "",
	               "");
	I_Method0(const std::string &, getName,
	          Properties::NON_VIRTUAL,
	          __C5_std_string_R1__getName,
	          "",
	          "");
	I_Method1(void, setName, IN, const std::string &, name,
	          Properties::NON_VIRTUAL,
	          __void__setName__C5_std_string_R1,
	          "",
	          "");
	I_Method0(const osgSim::ShapeAttribute::Type, getType,
	          Properties::NON_VIRTUAL,
	          __C5_Type__getType,
	          "",
	          "");
	I_Method0(int, getInt,
	          Properties::NON_VIRTUAL,
	          __int__getInt,
	          "",
	          "");
	I_Method0(double, getDouble,
	          Properties::NON_VIRTUAL,
	          __double__getDouble,
	          "",
	          "");
	I_Method0(const char *, getString,
	          Properties::NON_VIRTUAL,
	          __C5_char_P1__getString,
	          "",
	          "");
	I_Method1(void, setValue, IN, int, value,
	          Properties::NON_VIRTUAL,
	          __void__setValue__int,
	          "",
	          "");
	I_Method1(void, setValue, IN, double, value,
	          Properties::NON_VIRTUAL,
	          __void__setValue__double,
	          "",
	          "");
	I_Method1(void, setValue, IN, const char *, value,
	          Properties::NON_VIRTUAL,
	          __void__setValue__C5_char_P1,
	          "",
	          "");
	I_Method1(int, compare, IN, const osgSim::ShapeAttribute &, sa,
	          Properties::NON_VIRTUAL,
	          __int__compare__C5_osgSim_ShapeAttribute_R1,
	          "return -1 if *this < *rhs, 0 if *this==*rhs, 1 if *this>*rhs. ",
	          "");
	I_SimpleProperty(double, Double, 
	                 __double__getDouble, 
	                 0);
	I_SimpleProperty(int, Int, 
	                 __int__getInt, 
	                 0);
	I_SimpleProperty(const std::string &, Name, 
	                 __C5_std_string_R1__getName, 
	                 __void__setName__C5_std_string_R1);
	I_SimpleProperty(const char *, String, 
	                 __C5_char_P1__getString, 
	                 0);
	I_SimpleProperty(const osgSim::ShapeAttribute::Type, Type, 
	                 __C5_Type__getType, 
	                 0);
	I_SimpleProperty(double, Value, 
	                 0, 
	                 __void__setValue__double);
END_REFLECTOR

BEGIN_OBJECT_REFLECTOR(osgSim::ShapeAttributeList)
	I_DeclaringFile("osgSim/ShapeAttribute");
	I_BaseType(osg::Object);
	I_Method0(osg::Object *, cloneType,
	          Properties::VIRTUAL,
	          __osg_Object_P1__cloneType,
	          "Clone the type of an object, with Object* return type. ",
	          "Must be defined by derived classes. ");
	I_Method1(osg::Object *, clone, IN, const osg::CopyOp &, copyop,
	          Properties::VIRTUAL,
	          __osg_Object_P1__clone__C5_osg_CopyOp_R1,
	          "Clone an object, with Object* return type. ",
	          "Must be defined by derived classes. ");
	I_Method1(bool, isSameKindAs, IN, const osg::Object *, obj,
	          Properties::VIRTUAL,
	          __bool__isSameKindAs__C5_osg_Object_P1,
	          "",
	          "");
	I_Method0(const char *, libraryName,
	          Properties::VIRTUAL,
	          __C5_char_P1__libraryName,
	          "return the name of the object's library. ",
	          "Must be defined by derived classes. The OpenSceneGraph convention is that the namespace of a library is the same as the library name. ");
	I_Method0(const char *, className,
	          Properties::VIRTUAL,
	          __C5_char_P1__className,
	          "return the name of the object's class type. ",
	          "Must be defined by derived classes. ");
	I_Constructor0(____ShapeAttributeList,
	               "",
	               "");
	I_ConstructorWithDefaults2(IN, const osgSim::ShapeAttributeList &, sal, , IN, const osg::CopyOp &, copyop, osg::CopyOp::SHALLOW_COPY,
	                           ____ShapeAttributeList__C5_ShapeAttributeList_R1__C5_osg_CopyOp_R1,
	                           "Copy constructor, optional CopyOp object can be used to control shallow vs deep copying of dynamic data. ",
	                           "");
	I_Method1(int, compare, IN, const osgSim::ShapeAttributeList &, sal,
	          Properties::VIRTUAL,
	          __int__compare__C5_osgSim_ShapeAttributeList_R1,
	          "return -1 if *this < *rhs, 0 if *this==*rhs, 1 if *this>*rhs. ",
	          "");
END_REFLECTOR

