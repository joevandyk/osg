// ***************************************************************************
//
//   Generated automatically by genwrapper.
//   Please DO NOT EDIT this file!
//
// ***************************************************************************

#include <osgIntrospection/ReflectionMacros>
#include <osgIntrospection/TypedMethodInfo>
#include <osgIntrospection/Attributes>

#include <osg/Drawable>
#include <osg/Image>
#include <osg/Node>
#include <osg/Object>
#include <osg/StateAttribute>
#include <osg/Uniform>
#include <osgDB/Input>
#include <osgDB/ReaderWriter>
#include <osgDB/Registry>

BEGIN_VALUE_REFLECTOR(osgDB::Input)
	BaseType(osgDB::FieldReaderIterator);
	Constructor0();
	Method1(void, setOptions, IN, const osgDB::ReaderWriter::Options *, options);
	Method0(const osgDB::ReaderWriter::Options *, getOptions);
	Method1(osg::Object *, readObjectOfType, IN, const osg::Object &, compObj);
	Method1(osg::Object *, readObjectOfType, IN, const osgDB::basic_type_wrapper &, btw);
	Method0(osg::Object *, readObject);
	Method0(osg::Image *, readImage);
	Method0(osg::Drawable *, readDrawable);
	Method0(osg::StateAttribute *, readStateAttribute);
	Method0(osg::Uniform *, readUniform);
	Method0(osg::Node *, readNode);
	Method1(osg::Object *, readObject, IN, const std::string &, fileName);
	Method1(osg::Image *, readImage, IN, const std::string &, fileName);
	Method1(osg::Node *, readNode, IN, const std::string &, fileName);
	Method1(osg::Object *, getObjectForUniqueID, IN, const std::string &, uniqueID);
	Method2(void, regisiterUniqueIDForObject, IN, const std::string &, uniqueID, IN, osg::Object *, obj);
	Property(const osgDB::ReaderWriter::Options *, Options);
END_REFLECTOR

