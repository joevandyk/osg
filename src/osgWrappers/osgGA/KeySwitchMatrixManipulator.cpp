// ***************************************************************************
//
//   Generated automatically by genwrapper.
//   Please DO NOT EDIT this file!
//
// ***************************************************************************

#include <osgIntrospection/ReflectionMacros>
#include <osgIntrospection/TypedMethodInfo>
#include <osgIntrospection/Attributes>

#include <osg/ApplicationUsage>
#include <osg/Matrixd>
#include <osg/Node>
#include <osg/Vec3d>
#include <osgGA/GUIActionAdapter>
#include <osgGA/GUIEventAdapter>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/MatrixManipulator>
#include <osgUtil/SceneView>

TYPE_NAME_ALIAS(std::pair< std::string COMMA  osg::ref_ptr< osgGA::MatrixManipulator > >, osgGA::KeySwitchMatrixManipulator::NamedManipulator);

TYPE_NAME_ALIAS(std::map< int COMMA  osgGA::KeySwitchMatrixManipulator::NamedManipulator >, osgGA::KeySwitchMatrixManipulator::KeyManipMap);

BEGIN_VALUE_REFLECTOR(osgGA::KeySwitchMatrixManipulator)
	BaseType(osgGA::MatrixManipulator);
	Constructor0();
	Method0(const char *, className);
	Method3(void, addMatrixManipulator, IN, int, key, IN, std::string, name, IN, osgGA::MatrixManipulator *, cm);
	Method1(void, addNumberedMatrixManipulator, IN, osgGA::MatrixManipulator *, cm);
	Method0(unsigned int, getNumMatrixManipulators);
	Method1(void, selectMatrixManipulator, IN, unsigned int, num);
	Method0(osgGA::KeySwitchMatrixManipulator::KeyManipMap &, getKeyManipMap);
	Method0(const osgGA::KeySwitchMatrixManipulator::KeyManipMap &, getKeyManipMap);
	Method0(osgGA::MatrixManipulator *, getCurrentMatrixManipulator);
	Method0(const osgGA::MatrixManipulator *, getCurrentMatrixManipulator);
	Method1(osgGA::MatrixManipulator *, getMatrixManipulator, IN, unsigned int, key);
	Method1(const osgGA::MatrixManipulator *, getMatrixManipulator, IN, unsigned int, key);
	Method1(void, setMinimumDistance, IN, float, minimumDistance);
	Method1(void, setCoordinateFrameCallback, IN, osgGA::MatrixManipulator::CoordinateFrameCallback *, cb);
	Method1(void, setByMatrix, IN, const osg::Matrixd &, matrix);
	Method1(void, setByInverseMatrix, IN, const osg::Matrixd &, matrix);
	Method0(osg::Matrixd, getMatrix);
	Method0(osg::Matrixd, getInverseMatrix);
	Method0(osgUtil::SceneView::FusionDistanceMode, getFusionDistanceMode);
	Method0(float, getFusionDistanceValue);
	Method1(void, setNode, IN, osg::Node *, n);
	Method0(const osg::Node *, getNode);
	Method0(osg::Node *, getNode);
	MethodWithDefaults4(void, setHomePosition, IN, const osg::Vec3d &, eye, , IN, const osg::Vec3d &, center, , IN, const osg::Vec3d &, up, , IN, bool, autoComputeHomePosition, false);
	Method1(void, setAutoComputeHomePosition, IN, bool, flag);
	Method0(void, computeHomePosition);
	Method2(void, home, IN, const osgGA::GUIEventAdapter &, ee, IN, osgGA::GUIActionAdapter &, aa);
	Method2(void, init, IN, const osgGA::GUIEventAdapter &, ee, IN, osgGA::GUIActionAdapter &, aa);
	Method2(bool, handle, IN, const osgGA::GUIEventAdapter &, ea, IN, osgGA::GUIActionAdapter &, us);
	Method1(void, getUsage, IN, osg::ApplicationUsage &, usage);
	WriteOnlyProperty(bool, AutoComputeHomePosition);
	WriteOnlyProperty(const osg::Matrixd &, ByInverseMatrix);
	WriteOnlyProperty(const osg::Matrixd &, ByMatrix);
	WriteOnlyProperty(osgGA::MatrixManipulator::CoordinateFrameCallback *, CoordinateFrameCallback);
	ReadOnlyProperty(osgGA::MatrixManipulator *, CurrentMatrixManipulator);
	ReadOnlyProperty(osgUtil::SceneView::FusionDistanceMode, FusionDistanceMode);
	ReadOnlyProperty(float, FusionDistanceValue);
	ReadOnlyProperty(osg::Matrixd, InverseMatrix);
	ReadOnlyProperty(osgGA::KeySwitchMatrixManipulator::KeyManipMap &, KeyManipMap);
	ReadOnlyProperty(osg::Matrixd, Matrix);
	ArrayProperty_G(osgGA::MatrixManipulator *, MatrixManipulator, MatrixManipulators, unsigned int, void);
	WriteOnlyProperty(float, MinimumDistance);
	Property(osg::Node *, Node);
END_REFLECTOR

BEGIN_VALUE_REFLECTOR(osg::ref_ptr< osgGA::MatrixManipulator >)
	Constructor0();
	Constructor1(IN, osgGA::MatrixManipulator *, t);
	Constructor1(IN, const osg::ref_ptr< osgGA::MatrixManipulator > &, rp);
	Method0(bool, valid);
	Method0(osgGA::MatrixManipulator *, get);
	Method0(const osgGA::MatrixManipulator *, get);
	Method0(osgGA::MatrixManipulator *, take);
	Method0(osgGA::MatrixManipulator *, release);
	ReadOnlyProperty(osgGA::MatrixManipulator *, );
END_REFLECTOR

STD_MAP_REFLECTOR(std::map< int COMMA  osgGA::KeySwitchMatrixManipulator::NamedManipulator >);

STD_PAIR_REFLECTOR(std::pair< std::string COMMA  osg::ref_ptr< osgGA::MatrixManipulator > >);

