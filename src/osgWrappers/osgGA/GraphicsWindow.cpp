// ***************************************************************************
//
//   Generated automatically by genwrapper.
//   Please DO NOT EDIT this file!
//
// ***************************************************************************

#include <osgIntrospection/ReflectionMacros>
#include <osgIntrospection/TypedMethodInfo>
#include <osgIntrospection/StaticMethodInfo>
#include <osgIntrospection/Attributes>

#include <osg/GraphicsContext>
#include <osgGA/EventQueue>
#include <osgGA/GraphicsWindow>

// Must undefine IN and OUT macros defined in Windows headers
#ifdef IN
#undef IN
#endif
#ifdef OUT
#undef OUT
#endif

BEGIN_OBJECT_REFLECTOR(osgGA::GraphicsWindow)
	I_BaseType(osg::GraphicsContext);
	I_BaseType(osgGA::GUIActionAdapter);
	I_Constructor0();
	I_Method1(void, setEventQueue, IN, osgGA::EventQueue *, eventQueue);
	I_Method0(osgGA::EventQueue *, getEventQueue);
	I_Method0(const osgGA::EventQueue *, getEventQueue);
	I_Method0(bool, realizeImplementation);
	I_Method0(bool, isRealizedImplementation);
	I_Method0(void, closeImplementation);
	I_Method0(void, makeCurrentImplementation);
	I_Method1(void, makeContextCurrentImplementation, IN, osg::GraphicsContext *, x);
	I_Method1(void, bindPBufferToTextureImplementation, IN, GLenum, x);
	I_Method0(void, swapBuffersImplementation);
	I_Method0(void, requestRedraw);
	I_MethodWithDefaults1(void, requestContinuousUpdate, IN, bool, x, true);
	I_Method2(void, requestWarpPointer, IN, float, x, IN, float, x);
	I_Property(osgGA::EventQueue *, EventQueue);
END_REFLECTOR

