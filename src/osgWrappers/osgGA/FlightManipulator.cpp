// ***************************************************************************
//
//   Generated automatically by genwrapper.
//   Please DO NOT EDIT this file!
//
// ***************************************************************************

#include <osgIntrospection/ReflectionMacros>
#include <osgIntrospection/TypedMethodInfo>
#include <osgIntrospection/Attributes>

#include <osg/ApplicationUsage>
#include <osg/Matrixd>
#include <osg/Node>
#include <osgGA/FlightManipulator>
#include <osgGA/GUIActionAdapter>
#include <osgGA/GUIEventAdapter>

BEGIN_ENUM_REFLECTOR(osgGA::FlightManipulator::YawControlMode)
	EnumLabel(osgGA::FlightManipulator::YAW_AUTOMATICALLY_WHEN_BANKED);
	EnumLabel(osgGA::FlightManipulator::NO_AUTOMATIC_YAW);
END_REFLECTOR

BEGIN_OBJECT_REFLECTOR(osgGA::FlightManipulator)
	BaseType(osgGA::MatrixManipulator);
	Constructor0();
	Method0(const char *, className);
	Method1(void, setByMatrix, IN, const osg::Matrixd &, matrix);
	Method1(void, setByInverseMatrix, IN, const osg::Matrixd &, matrix);
	Method0(osg::Matrixd, getMatrix);
	Method0(osg::Matrixd, getInverseMatrix);
	Method1(void, setNode, IN, osg::Node *, x);
	Method0(const osg::Node *, getNode);
	Method0(osg::Node *, getNode);
	Method2(void, home, IN, const osgGA::GUIEventAdapter &, ea, IN, osgGA::GUIActionAdapter &, us);
	Method2(void, init, IN, const osgGA::GUIEventAdapter &, ea, IN, osgGA::GUIActionAdapter &, us);
	Method2(bool, handle, IN, const osgGA::GUIEventAdapter &, ea, IN, osgGA::GUIActionAdapter &, us);
	Method1(void, getUsage, IN, osg::ApplicationUsage &, usage);
	Method1(void, setYawControlMode, IN, osgGA::FlightManipulator::YawControlMode, ycm);
	WriteOnlyProperty(const osg::Matrixd &, ByInverseMatrix);
	WriteOnlyProperty(const osg::Matrixd &, ByMatrix);
	ReadOnlyProperty(osg::Matrixd, InverseMatrix);
	ReadOnlyProperty(osg::Matrixd, Matrix);
	Property(osg::Node *, Node);
	WriteOnlyProperty(osgGA::FlightManipulator::YawControlMode, YawControlMode);
END_REFLECTOR

