// ***************************************************************************
//
//   Generated automatically by genwrapper.
//   Please DO NOT EDIT this file!
//
// ***************************************************************************

#include <osgIntrospection/ReflectionMacros>
#include <osgIntrospection/TypedMethodInfo>
#include <osgIntrospection/Attributes>

#include <osgText/String>

// Must undefine IN and OUT macros defined in Windows headers
#ifdef IN
#undef IN
#endif
#ifdef OUT
#undef OUT
#endif

TYPE_NAME_ALIAS(osgText::VectorUInt, osgText::String::vector_type);

BEGIN_ENUM_REFLECTOR(osgText::String::Encoding)
	I_EnumLabel(osgText::String::ENCODING_UNDEFINED);
	I_EnumLabel(osgText::String::ENCODING_ASCII);
	I_EnumLabel(osgText::String::ENCODING_UTF8);
	I_EnumLabel(osgText::String::ENCODING_UTF16);
	I_EnumLabel(osgText::String::ENCODING_UTF16_BE);
	I_EnumLabel(osgText::String::ENCODING_UTF16_LE);
	I_EnumLabel(osgText::String::ENCODING_UTF32);
	I_EnumLabel(osgText::String::ENCODING_UTF32_BE);
	I_EnumLabel(osgText::String::ENCODING_UTF32_LE);
	I_EnumLabel(osgText::String::ENCODING_SIGNATURE);
END_REFLECTOR

BEGIN_OBJECT_REFLECTOR(osgText::String)
	I_BaseType(osg::Referenced);
	I_BaseType(osgText::VectorUInt);
	I_Constructor0();
	I_Constructor1(IN, const osgText::String &, str);
	I_Constructor1(IN, const std::string &, str);
	I_Constructor1(IN, const wchar_t *, text);
	I_Constructor2(IN, const std::string &, text, IN, osgText::String::Encoding, encoding);
	I_Method1(void, set, IN, const std::string &, str);
	I_Method1(void, set, IN, const wchar_t *, text);
	I_Method2(void, set, IN, const std::string &, text, IN, osgText::String::Encoding, encoding);
	I_Method0(std::string, createUTF8EncodedString);
	I_WriteOnlyProperty(const wchar_t *, );
END_REFLECTOR

BEGIN_OBJECT_REFLECTOR(osgText::VectorUInt)
	I_BaseType(std::vector<unsigned int>);
	I_Constructor0();
	I_Constructor1(IN, const osgText::VectorUInt &, copy);
	I_Constructor2(IN, unsigned int *, beg, IN, unsigned int *, end);
	I_Constructor1(IN, unsigned int, n);
END_REFLECTOR

