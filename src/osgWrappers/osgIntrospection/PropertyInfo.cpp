// ***************************************************************************
//
//   Generated automatically by genwrapper.
//   Please DO NOT EDIT this file!
//
// ***************************************************************************

#include <osgIntrospection/ReflectionMacros>
#include <osgIntrospection/TypedMethodInfo>
#include <osgIntrospection/Attributes>

#include <osgIntrospection/MethodInfo>
#include <osgIntrospection/PropertyInfo>
#include <osgIntrospection/Type>
#include <osgIntrospection/Value>

// Must undefine IN and OUT macros defined in Windows headers
#ifdef IN
#undef IN
#endif
#ifdef OUT
#undef OUT
#endif

BEGIN_OBJECT_REFLECTOR(osgIntrospection::PropertyInfo)
	I_BaseType(osgIntrospection::CustomAttributeProvider);
	I_Constructor5(IN, const osgIntrospection::Type &, decltype, IN, const osgIntrospection::Type &, ptype, IN, const std::string &, name, IN, const osgIntrospection::MethodInfo *, getm, IN, const osgIntrospection::MethodInfo *, setm);
	I_Constructor8(IN, const osgIntrospection::Type &, decltype, IN, const osgIntrospection::Type &, ptype, IN, const std::string &, name, IN, const osgIntrospection::MethodInfo *, getm, IN, const osgIntrospection::MethodInfo *, setm, IN, const osgIntrospection::MethodInfo *, numm, IN, const osgIntrospection::MethodInfo *, addm, IN, const osgIntrospection::MethodInfo *, remm);
	I_Method0(int, getNumIndices);
	I_Method0(const std::string &, getName);
	I_Method0(const osgIntrospection::Type &, getDeclaringType);
	I_Method0(const osgIntrospection::Type &, getPropertyType);
	I_Method0(const osgIntrospection::MethodInfo *, getGetMethod);
	I_Method0(const osgIntrospection::MethodInfo *, getSetMethod);
	I_Method0(const osgIntrospection::MethodInfo *, getCountMethod);
	I_Method0(const osgIntrospection::MethodInfo *, getAddMethod);
	I_Method0(const osgIntrospection::MethodInfo *, getRemoveMethod);
	I_Method0(bool, canGet);
	I_Method0(bool, canSet);
	I_Method0(bool, canCount);
	I_Method0(bool, canAdd);
	I_Method0(bool, canRemove);
	I_Method0(bool, isSimple);
	I_Method0(bool, isIndexed);
	I_Method0(bool, isArray);
	I_Method0(const osgIntrospection::ParameterInfoList &, getIndexParameters);
	I_Method3(void, getIndexValueSet, IN, int, whichindex, IN, const osgIntrospection::Value &, instance, IN, osgIntrospection::ValueList &, values);
	I_Method1(osgIntrospection::Value, getValue, IN, const osgIntrospection::Value &, instance);
	I_Method1(osgIntrospection::Value, getValue, IN, osgIntrospection::Value &, instance);
	I_Method2(void, setValue, IN, osgIntrospection::Value &, instance, IN, const osgIntrospection::Value &, value);
	I_Method2(osgIntrospection::Value, getIndexedValue, IN, osgIntrospection::Value &, instance, IN, osgIntrospection::ValueList &, indices);
	I_Method2(osgIntrospection::Value, getIndexedValue, IN, const osgIntrospection::Value &, instance, IN, osgIntrospection::ValueList &, indices);
	I_Method3(void, setIndexedValue, IN, osgIntrospection::Value &, instance, IN, osgIntrospection::ValueList &, indices, IN, const osgIntrospection::Value &, value);
	I_Method1(int, getNumArrayItems, IN, const osgIntrospection::Value &, instance);
	I_Method2(osgIntrospection::Value, getArrayItem, IN, const osgIntrospection::Value &, instance, IN, int, i);
	I_Method2(osgIntrospection::Value, getArrayItem, IN, osgIntrospection::Value &, instance, IN, int, i);
	I_Method3(void, setArrayItem, IN, osgIntrospection::Value &, instance, IN, int, i, IN, const osgIntrospection::Value &, value);
	I_Method2(void, addArrayItem, IN, osgIntrospection::Value &, instance, IN, const osgIntrospection::Value &, value);
	I_Method2(void, removeArrayItem, IN, osgIntrospection::Value &, instance, IN, int, i);
	I_Method0(osgIntrospection::Value, getDefaultValue);
	I_ReadOnlyProperty(const osgIntrospection::MethodInfo *, AddMethod);
	I_ReadOnlyProperty(const osgIntrospection::MethodInfo *, CountMethod);
	I_ReadOnlyProperty(const osgIntrospection::Type &, DeclaringType);
	I_ReadOnlyProperty(osgIntrospection::Value, DefaultValue);
	I_ReadOnlyProperty(const osgIntrospection::MethodInfo *, GetMethod);
	I_ReadOnlyProperty(const osgIntrospection::ParameterInfoList &, IndexParameters);
	I_ReadOnlyProperty(const std::string &, Name);
	I_ReadOnlyProperty(const osgIntrospection::Type &, PropertyType);
	I_ReadOnlyProperty(const osgIntrospection::MethodInfo *, RemoveMethod);
	I_ReadOnlyProperty(const osgIntrospection::MethodInfo *, SetMethod);
END_REFLECTOR

