// ***************************************************************************
//
//   Generated automatically by genwrapper.
//   Please DO NOT EDIT this file!
//
// ***************************************************************************

#include <osgIntrospection/ReflectionMacros>
#include <osgIntrospection/TypedMethodInfo>
#include <osgIntrospection/Attributes>

#include <osgIntrospection/Attributes>
#include <osgIntrospection/Type>
#include <osgIntrospection/Value>

// Must undefine IN and OUT macros defined in Windows headers
#ifdef IN
#undef IN
#endif
#ifdef OUT
#undef OUT
#endif

BEGIN_OBJECT_REFLECTOR(osgIntrospection::CustomIndexAttribute)
	I_BaseType(osgIntrospection::CustomAttribute);
	I_Constructor1(IN, const osgIntrospection::IndexInfo *, ii);
	I_Method0(const osgIntrospection::IndexInfo *, getIndexInfo);
	I_ReadOnlyProperty(const osgIntrospection::IndexInfo *, IndexInfo);
END_REFLECTOR

BEGIN_OBJECT_REFLECTOR(osgIntrospection::CustomPropertyAddAttribute)
	I_BaseType(osgIntrospection::CustomAttribute);
	I_Constructor1(IN, const osgIntrospection::PropertyAdder *, adder);
	I_Method0(const osgIntrospection::PropertyAdder *, getAdder);
	I_ReadOnlyProperty(const osgIntrospection::PropertyAdder *, Adder);
END_REFLECTOR

BEGIN_OBJECT_REFLECTOR(osgIntrospection::CustomPropertyCountAttribute)
	I_BaseType(osgIntrospection::CustomAttribute);
	I_Constructor1(IN, const osgIntrospection::PropertyCounter *, counter);
	I_Method0(const osgIntrospection::PropertyCounter *, getCounter);
	I_ReadOnlyProperty(const osgIntrospection::PropertyCounter *, Counter);
END_REFLECTOR

BEGIN_OBJECT_REFLECTOR(osgIntrospection::CustomPropertyGetAttribute)
	I_BaseType(osgIntrospection::CustomAttribute);
	I_Constructor1(IN, const osgIntrospection::PropertyGetter *, getter);
	I_Method0(const osgIntrospection::PropertyGetter *, getGetter);
	I_ReadOnlyProperty(const osgIntrospection::PropertyGetter *, Getter);
END_REFLECTOR

BEGIN_OBJECT_REFLECTOR(osgIntrospection::CustomPropertyRemoveAttribute)
	I_BaseType(osgIntrospection::CustomAttribute);
	I_Constructor1(IN, const osgIntrospection::PropertyRemover *, remover);
	I_Method0(const osgIntrospection::PropertyRemover *, getRemover);
	I_ReadOnlyProperty(const osgIntrospection::PropertyRemover *, Remover);
END_REFLECTOR

BEGIN_OBJECT_REFLECTOR(osgIntrospection::CustomPropertySetAttribute)
	I_BaseType(osgIntrospection::CustomAttribute);
	I_Constructor1(IN, const osgIntrospection::PropertySetter *, setter);
	I_Method0(const osgIntrospection::PropertySetter *, getSetter);
	I_ReadOnlyProperty(const osgIntrospection::PropertySetter *, Setter);
END_REFLECTOR

BEGIN_OBJECT_REFLECTOR(osgIntrospection::DefaultValueAttribute)
	I_BaseType(osgIntrospection::CustomAttribute);
	I_Constructor1(IN, const osgIntrospection::Value &, v);
	I_Method0(const osgIntrospection::Value &, getDefaultValue);
	I_ReadOnlyProperty(const osgIntrospection::Value &, DefaultValue);
END_REFLECTOR

BEGIN_ABSTRACT_OBJECT_REFLECTOR(osgIntrospection::IndexInfo)
	I_Constructor0();
	I_Method0(const osgIntrospection::ParameterInfoList &, getIndexParameters);
	I_Method3(void, getIndexValueSet, IN, int, whichindex, IN, const osgIntrospection::Value &, instance, IN, osgIntrospection::ValueList &, values);
	I_ReadOnlyProperty(const osgIntrospection::ParameterInfoList &, IndexParameters);
END_REFLECTOR

BEGIN_OBJECT_REFLECTOR(osgIntrospection::IndexTypeAttribute)
	I_BaseType(osgIntrospection::CustomAttribute);
	I_Constructor2(IN, int, whichindex, IN, const osgIntrospection::Type &, type);
	I_Method0(int, getWhichIndex);
	I_Method0(const osgIntrospection::Type &, getIndexType);
	I_ReadOnlyProperty(const osgIntrospection::Type &, IndexType);
	I_ReadOnlyProperty(int, WhichIndex);
END_REFLECTOR

BEGIN_OBJECT_REFLECTOR(osgIntrospection::NoDefaultValueAttribute)
	I_BaseType(osgIntrospection::CustomAttribute);
	I_Constructor0();
END_REFLECTOR

BEGIN_VALUE_REFLECTOR(osgIntrospection::PropertyAdder)
	I_Constructor0();
	I_Method2(void, add, IN, osgIntrospection::Value &, x, IN, const osgIntrospection::Value &, x);
END_REFLECTOR

BEGIN_VALUE_REFLECTOR(osgIntrospection::PropertyCounter)
	I_Constructor0();
	I_Method1(int, count, IN, const osgIntrospection::Value &, x);
END_REFLECTOR

BEGIN_VALUE_REFLECTOR(osgIntrospection::PropertyGetter)
	I_Constructor0();
	I_Method2(osgIntrospection::Value, get, IN, osgIntrospection::Value &, x, IN, const osgIntrospection::ValueList &, x);
	I_Method1(osgIntrospection::Value, get, IN, osgIntrospection::Value &, x);
	I_Method2(osgIntrospection::Value, get, IN, osgIntrospection::Value &, x, IN, int, x);
	I_Method2(osgIntrospection::Value, get, IN, const osgIntrospection::Value &, x, IN, const osgIntrospection::ValueList &, x);
	I_Method1(osgIntrospection::Value, get, IN, const osgIntrospection::Value &, x);
	I_Method2(osgIntrospection::Value, get, IN, const osgIntrospection::Value &, x, IN, int, x);
END_REFLECTOR

BEGIN_VALUE_REFLECTOR(osgIntrospection::PropertyRemover)
	I_Constructor0();
	I_Method2(void, remove, IN, osgIntrospection::Value &, x, IN, int, x);
END_REFLECTOR

BEGIN_VALUE_REFLECTOR(osgIntrospection::PropertySetter)
	I_Constructor0();
	I_Method3(void, set, IN, osgIntrospection::Value &, x, IN, osgIntrospection::ValueList &, x, IN, const osgIntrospection::Value &, x);
	I_Method2(void, set, IN, osgIntrospection::Value &, x, IN, const osgIntrospection::Value &, x);
	I_Method3(void, set, IN, osgIntrospection::Value &, x, IN, int, x, IN, const osgIntrospection::Value &, x);
END_REFLECTOR

BEGIN_OBJECT_REFLECTOR(osgIntrospection::PropertyTypeAttribute)
	I_BaseType(osgIntrospection::CustomAttribute);
	I_Constructor1(IN, const osgIntrospection::Type &, type);
	I_Method0(const osgIntrospection::Type &, getPropertyType);
	I_ReadOnlyProperty(const osgIntrospection::Type &, PropertyType);
END_REFLECTOR

