// ***************************************************************************
//
//   Generated automatically by genwrapper.
//   Please DO NOT EDIT this file!
//
// ***************************************************************************

#include <osgIntrospection/ReflectionMacros>
#include <osgIntrospection/TypedMethodInfo>
#include <osgIntrospection/Attributes>

#include <osgIntrospection/Reflector>
#include <osgIntrospection/Type>
#include <osgIntrospection/Value>

// Must undefine IN and OUT macros defined in Windows headers
#ifdef IN
#undef IN
#endif
#ifdef OUT
#undef OUT
#endif

BEGIN_OBJECT_REFLECTOR(osgIntrospection::StdListReflector::Adder)
	I_BaseType(osgIntrospection::PropertyAdder);
	I_Constructor0();
	I_Method2(void, add, IN, osgIntrospection::Value &, instance, IN, const osgIntrospection::Value &, v);
END_REFLECTOR

BEGIN_OBJECT_REFLECTOR(osgIntrospection::StdListReflector::Counter)
	I_BaseType(osgIntrospection::PropertyCounter);
	I_Constructor0();
	I_Method1(int, count, IN, const osgIntrospection::Value &, instance);
END_REFLECTOR

BEGIN_OBJECT_REFLECTOR(osgIntrospection::StdListReflector::Getter)
	I_BaseType(osgIntrospection::PropertyGetter);
	I_Constructor0();
	I_Method2(osgIntrospection::Value, get, IN, osgIntrospection::Value &, instance, IN, int, i);
	I_Method2(osgIntrospection::Value, get, IN, const osgIntrospection::Value &, instance, IN, int, i);
END_REFLECTOR

BEGIN_OBJECT_REFLECTOR(osgIntrospection::StdListReflector::Remover)
	I_BaseType(osgIntrospection::PropertyRemover);
	I_Constructor0();
	I_Method2(void, remove, IN, osgIntrospection::Value &, instance, IN, int, i);
END_REFLECTOR

BEGIN_OBJECT_REFLECTOR(osgIntrospection::StdListReflector::Setter)
	I_BaseType(osgIntrospection::PropertySetter);
	I_Constructor0();
	I_Method3(void, set, IN, osgIntrospection::Value &, instance, IN, int, i, IN, const osgIntrospection::Value &, v);
END_REFLECTOR

BEGIN_OBJECT_REFLECTOR(osgIntrospection::StdMapReflector::Getter)
	I_BaseType(osgIntrospection::PropertyGetter);
	I_Constructor0();
	I_Method2(osgIntrospection::Value, get, IN, osgIntrospection::Value &, instance, IN, const osgIntrospection::ValueList &, indices);
	I_Method2(osgIntrospection::Value, get, IN, const osgIntrospection::Value &, instance, IN, const osgIntrospection::ValueList &, indices);
END_REFLECTOR

BEGIN_OBJECT_REFLECTOR(osgIntrospection::StdMapReflector::Indexer)
	I_BaseType(osgIntrospection::IndexInfo);
	I_Constructor0();
	I_Method0(const osgIntrospection::ParameterInfoList &, getIndexParameters);
	I_Method3(void, getIndexValueSet, IN, int, x, IN, const osgIntrospection::Value &, instance, IN, osgIntrospection::ValueList &, values);
	I_ReadOnlyProperty(const osgIntrospection::ParameterInfoList &, IndexParameters);
END_REFLECTOR

BEGIN_OBJECT_REFLECTOR(osgIntrospection::StdMapReflector::Setter)
	I_BaseType(osgIntrospection::PropertySetter);
	I_Constructor0();
	I_Method3(void, set, IN, osgIntrospection::Value &, instance, IN, const osgIntrospection::ValueList &, indices, IN, const osgIntrospection::Value &, v);
END_REFLECTOR

BEGIN_OBJECT_REFLECTOR(osgIntrospection::StdPairReflector::Accessor)
	I_BaseType(osgIntrospection::PropertyGetter);
	I_Constructor1(IN, int, i);
	I_Method1(osgIntrospection::Value, get, IN, const osgIntrospection::Value &, instance);
	I_Method1(osgIntrospection::Value, get, IN, osgIntrospection::Value &, instance);
	I_Method2(void, set, IN, const osgIntrospection::Value &, instance, IN, const osgIntrospection::Value &, v);
END_REFLECTOR

BEGIN_OBJECT_REFLECTOR(osgIntrospection::StdSetReflector::Adder)
	I_BaseType(osgIntrospection::PropertyAdder);
	I_Constructor0();
	I_Method2(void, add, IN, osgIntrospection::Value &, instance, IN, const osgIntrospection::Value &, v);
END_REFLECTOR

BEGIN_OBJECT_REFLECTOR(osgIntrospection::StdSetReflector::Counter)
	I_BaseType(osgIntrospection::PropertyCounter);
	I_Constructor0();
	I_Method1(int, count, IN, const osgIntrospection::Value &, instance);
END_REFLECTOR

BEGIN_OBJECT_REFLECTOR(osgIntrospection::StdSetReflector::Getter)
	I_BaseType(osgIntrospection::PropertyGetter);
	I_Constructor0();
	I_Method2(osgIntrospection::Value, get, IN, osgIntrospection::Value &, instance, IN, int, i);
	I_Method2(osgIntrospection::Value, get, IN, const osgIntrospection::Value &, instance, IN, int, i);
END_REFLECTOR

BEGIN_OBJECT_REFLECTOR(osgIntrospection::StdSetReflector::Remover)
	I_BaseType(osgIntrospection::PropertyRemover);
	I_Constructor0();
	I_Method2(void, remove, IN, osgIntrospection::Value &, instance, IN, int, i);
END_REFLECTOR

BEGIN_OBJECT_REFLECTOR(osgIntrospection::StdVectorReflector::Adder)
	I_BaseType(osgIntrospection::PropertyAdder);
	I_Constructor0();
	I_Method2(void, add, IN, osgIntrospection::Value &, instance, IN, const osgIntrospection::Value &, v);
END_REFLECTOR

BEGIN_OBJECT_REFLECTOR(osgIntrospection::StdVectorReflector::Counter)
	I_BaseType(osgIntrospection::PropertyCounter);
	I_Constructor0();
	I_Method1(int, count, IN, const osgIntrospection::Value &, instance);
END_REFLECTOR

BEGIN_OBJECT_REFLECTOR(osgIntrospection::StdVectorReflector::Getter)
	I_BaseType(osgIntrospection::PropertyGetter);
	I_Constructor0();
	I_Method2(osgIntrospection::Value, get, IN, osgIntrospection::Value &, instance, IN, int, i);
	I_Method2(osgIntrospection::Value, get, IN, const osgIntrospection::Value &, instance, IN, int, i);
END_REFLECTOR

BEGIN_OBJECT_REFLECTOR(osgIntrospection::StdVectorReflector::Remover)
	I_BaseType(osgIntrospection::PropertyRemover);
	I_Constructor0();
	I_Method2(void, remove, IN, osgIntrospection::Value &, instance, IN, int, i);
END_REFLECTOR

BEGIN_OBJECT_REFLECTOR(osgIntrospection::StdVectorReflector::Setter)
	I_BaseType(osgIntrospection::PropertySetter);
	I_Constructor0();
	I_Method3(void, set, IN, osgIntrospection::Value &, instance, IN, int, i, IN, const osgIntrospection::Value &, v);
END_REFLECTOR

