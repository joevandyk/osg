// ***************************************************************************
//
//   Generated automatically by genwrapper.
//   Please DO NOT EDIT this file!
//
// ***************************************************************************

#include <osgIntrospection/ReflectionMacros>
#include <osgIntrospection/TypedMethodInfo>
#include <osgIntrospection/StaticMethodInfo>
#include <osgIntrospection/Attributes>

#include <osg/.svn/text-base/CopyOp.svn-base>
#include <osg/.svn/text-base/Object.svn-base>
#include <osg/.svn/text-base/Vec3.svn-base>
#include <osgParticle/Particle>
#include <osgParticle/PointPlacer>

// Must undefine IN and OUT macros defined in Windows headers
#ifdef IN
#undef IN
#endif
#ifdef OUT
#undef OUT
#endif

BEGIN_OBJECT_REFLECTOR(osgParticle::PointPlacer)
	I_BaseType(osgParticle::CenteredPlacer);
	I_BaseType(osgParticle::CenteredPlacer);
	I_Constructor0(____PointPlacer,
	               "",
	               "");
	I_ConstructorWithDefaults2(IN, const osgParticle::PointPlacer &, copy, , IN, const osg::CopyOp &, copyop, osg::CopyOp::SHALLOW_COPY,
	                           ____PointPlacer__C5_PointPlacer_R1__C5_osg_CopyOp_R1,
	                           "",
	                           "");
	I_Method0(osg::Object *, cloneType,
	          Properties::VIRTUAL,
	          __osg_Object_P1__cloneType,
	          "",
	          "");
	I_Method1(osg::Object *, clone, IN, const osg::CopyOp &, copyop,
	          Properties::VIRTUAL,
	          __osg_Object_P1__clone__C5_osg_CopyOp_R1,
	          "",
	          "");
	I_Method1(bool, isSameKindAs, IN, const osg::Object *, obj,
	          Properties::VIRTUAL,
	          __bool__isSameKindAs__C5_osg_Object_P1,
	          "",
	          "");
	I_Method0(const char *, libraryName,
	          Properties::VIRTUAL,
	          __C5_char_P1__libraryName,
	          "",
	          "");
	I_Method0(const char *, className,
	          Properties::VIRTUAL,
	          __C5_char_P1__className,
	          "",
	          "");
	I_Method1(void, place, IN, osgParticle::Particle *, P,
	          Properties::NON_VIRTUAL,
	          __void__place__Particle_P1,
	          "Place a particle. ",
	          "This method is called automatically by ModularEmitter and should not be called manually.");
	I_Method0(osg::Vec3, getControlPosition,
	          Properties::NON_VIRTUAL,
	          __osg_Vec3__getControlPosition,
	          "return the control position ",
	          "");
	I_Constructor0(____PointPlacer,
	               "",
	               "");
	I_ConstructorWithDefaults2(IN, const osgParticle::PointPlacer &, copy, , IN, const osg::CopyOp &, copyop, osg::CopyOp::SHALLOW_COPY,
	                           ____PointPlacer__C5_PointPlacer_R1__C5_osg_CopyOp_R1,
	                           "",
	                           "");
	I_Method0(osg::Object *, cloneType,
	          Properties::VIRTUAL,
	          __osg_Object_P1__cloneType,
	          "",
	          "");
	I_Method1(osg::Object *, clone, IN, const osg::CopyOp &, copyop,
	          Properties::VIRTUAL,
	          __osg_Object_P1__clone__C5_osg_CopyOp_R1,
	          "",
	          "");
	I_Method1(bool, isSameKindAs, IN, const osg::Object *, obj,
	          Properties::VIRTUAL,
	          __bool__isSameKindAs__C5_osg_Object_P1,
	          "",
	          "");
	I_Method0(const char *, libraryName,
	          Properties::VIRTUAL,
	          __C5_char_P1__libraryName,
	          "",
	          "");
	I_Method0(const char *, className,
	          Properties::VIRTUAL,
	          __C5_char_P1__className,
	          "",
	          "");
	I_Method1(void, place, IN, osgParticle::Particle *, P,
	          Properties::NON_VIRTUAL,
	          __void__place__Particle_P1,
	          "Place a particle. ",
	          "This method is called automatically by ModularEmitter and should not be called manually.");
	I_Method0(osg::Vec3, getControlPosition,
	          Properties::NON_VIRTUAL,
	          __osg_Vec3__getControlPosition,
	          "return the control position ",
	          "");
	I_SimpleProperty(osg::Vec3, ControlPosition, 
	                 __osg_Vec3__getControlPosition, 
	                 0);
END_REFLECTOR

BEGIN_OBJECT_REFLECTOR(osgParticle::PointPlacer)
	I_BaseType(osgParticle::CenteredPlacer);
	I_BaseType(osgParticle::CenteredPlacer);
	I_Constructor0(____PointPlacer,
	               "",
	               "");
	I_ConstructorWithDefaults2(IN, const osgParticle::PointPlacer &, copy, , IN, const osg::CopyOp &, copyop, osg::CopyOp::SHALLOW_COPY,
	                           ____PointPlacer__C5_PointPlacer_R1__C5_osg_CopyOp_R1,
	                           "",
	                           "");
	I_Method0(osg::Object *, cloneType,
	          Properties::VIRTUAL,
	          __osg_Object_P1__cloneType,
	          "",
	          "");
	I_Method1(osg::Object *, clone, IN, const osg::CopyOp &, copyop,
	          Properties::VIRTUAL,
	          __osg_Object_P1__clone__C5_osg_CopyOp_R1,
	          "",
	          "");
	I_Method1(bool, isSameKindAs, IN, const osg::Object *, obj,
	          Properties::VIRTUAL,
	          __bool__isSameKindAs__C5_osg_Object_P1,
	          "",
	          "");
	I_Method0(const char *, libraryName,
	          Properties::VIRTUAL,
	          __C5_char_P1__libraryName,
	          "",
	          "");
	I_Method0(const char *, className,
	          Properties::VIRTUAL,
	          __C5_char_P1__className,
	          "",
	          "");
	I_Method1(void, place, IN, osgParticle::Particle *, P,
	          Properties::NON_VIRTUAL,
	          __void__place__Particle_P1,
	          "Place a particle. ",
	          "This method is called automatically by ModularEmitter and should not be called manually.");
	I_Method0(osg::Vec3, getControlPosition,
	          Properties::NON_VIRTUAL,
	          __osg_Vec3__getControlPosition,
	          "return the control position ",
	          "");
	I_Constructor0(____PointPlacer,
	               "",
	               "");
	I_ConstructorWithDefaults2(IN, const osgParticle::PointPlacer &, copy, , IN, const osg::CopyOp &, copyop, osg::CopyOp::SHALLOW_COPY,
	                           ____PointPlacer__C5_PointPlacer_R1__C5_osg_CopyOp_R1,
	                           "",
	                           "");
	I_Method0(osg::Object *, cloneType,
	          Properties::VIRTUAL,
	          __osg_Object_P1__cloneType,
	          "",
	          "");
	I_Method1(osg::Object *, clone, IN, const osg::CopyOp &, copyop,
	          Properties::VIRTUAL,
	          __osg_Object_P1__clone__C5_osg_CopyOp_R1,
	          "",
	          "");
	I_Method1(bool, isSameKindAs, IN, const osg::Object *, obj,
	          Properties::VIRTUAL,
	          __bool__isSameKindAs__C5_osg_Object_P1,
	          "",
	          "");
	I_Method0(const char *, libraryName,
	          Properties::VIRTUAL,
	          __C5_char_P1__libraryName,
	          "",
	          "");
	I_Method0(const char *, className,
	          Properties::VIRTUAL,
	          __C5_char_P1__className,
	          "",
	          "");
	I_Method1(void, place, IN, osgParticle::Particle *, P,
	          Properties::NON_VIRTUAL,
	          __void__place__Particle_P1,
	          "Place a particle. ",
	          "This method is called automatically by ModularEmitter and should not be called manually.");
	I_Method0(osg::Vec3, getControlPosition,
	          Properties::NON_VIRTUAL,
	          __osg_Vec3__getControlPosition,
	          "return the control position ",
	          "");
	I_SimpleProperty(osg::Vec3, ControlPosition, 
	                 __osg_Vec3__getControlPosition, 
	                 0);
END_REFLECTOR

