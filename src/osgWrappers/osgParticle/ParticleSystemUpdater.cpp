// ***************************************************************************
//
//   Generated automatically by genwrapper.
//   Please DO NOT EDIT this file!
//
// ***************************************************************************

#include <osgIntrospection/ReflectionMacros>
#include <osgIntrospection/TypedMethodInfo>
#include <osgIntrospection/Attributes>

#include <osg/BoundingSphere>
#include <osg/CopyOp>
#include <osg/NodeVisitor>
#include <osg/Object>
#include <osgParticle/ParticleSystem>
#include <osgParticle/ParticleSystemUpdater>

BEGIN_OBJECT_REFLECTOR(osgParticle::ParticleSystemUpdater)
	BaseType(osg::Node);
	Constructor0();
	ConstructorWithDefaults2(IN, const osgParticle::ParticleSystemUpdater &, copy, , IN, const osg::CopyOp &, copyop, osg::CopyOp::SHALLOW_COPY);
	Method0(osg::Object *, cloneType);
	Method1(osg::Object *, clone, IN, const osg::CopyOp &, copyop);
	Method1(bool, isSameKindAs, IN, const osg::Object *, obj);
	Method0(const char *, className);
	Method0(const char *, libraryName);
	Method1(void, accept, IN, osg::NodeVisitor &, nv);
	Method1(bool, addParticleSystem, IN, osgParticle::ParticleSystem *, ps);
	Method1(bool, removeParticleSystem, IN, osgParticle::ParticleSystem *, ps);
	MethodWithDefaults2(bool, removeParticleSystem, IN, unsigned int, i, , IN, unsigned int, numParticleSystemsToRemove, 1);
	Method2(bool, replaceParticleSystem, IN, osgParticle::ParticleSystem *, origPS, IN, osgParticle::ParticleSystem *, newPS);
	Method2(bool, setParticleSystem, IN, unsigned int, i, IN, osgParticle::ParticleSystem *, ps);
	Method0(unsigned int, getNumParticleSystems);
	Method1(osgParticle::ParticleSystem *, getParticleSystem, IN, unsigned int, i);
	Method1(const osgParticle::ParticleSystem *, getParticleSystem, IN, unsigned int, i);
	Method1(bool, containsParticleSystem, IN, const osgParticle::ParticleSystem *, ps);
	Method1(unsigned int, getParticleSystemIndex, IN, const osgParticle::ParticleSystem *, ps);
	Method1(void, traverse, IN, osg::NodeVisitor &, nv);
	Method0(osg::BoundingSphere, computeBound);
	ArrayProperty_GSA(osgParticle::ParticleSystem *, ParticleSystem, ParticleSystems, unsigned int, bool);
END_REFLECTOR

