// ***************************************************************************
//
//   Generated automatically by genwrapper.
//   Please DO NOT EDIT this file!
//
// ***************************************************************************

#include <osgIntrospection/ReflectionMacros>
#include <osgIntrospection/TypedMethodInfo>
#include <osgIntrospection/Attributes>

#include <osg/CopyOp>
#include <osg/Object>
#include <osg/Vec3>
#include <osgParticle/FluidFrictionOperator>
#include <osgParticle/Particle>
#include <osgParticle/Program>

BEGIN_OBJECT_REFLECTOR(osgParticle::FluidFrictionOperator)
	BaseType(osgParticle::Operator);
	Constructor0();
	ConstructorWithDefaults2(IN, const osgParticle::FluidFrictionOperator &, copy, , IN, const osg::CopyOp &, copyop, osg::CopyOp::SHALLOW_COPY);
	Method0(osg::Object *, cloneType);
	Method1(osg::Object *, clone, IN, const osg::CopyOp &, copyop);
	Method1(bool, isSameKindAs, IN, const osg::Object *, obj);
	Method0(const char *, libraryName);
	Method0(const char *, className);
	Method1(void, setFluidDensity, IN, float, d);
	Method0(float, getFluidDensity);
	Method1(void, setFluidViscosity, IN, float, v);
	Method0(float, getFluidViscosity);
	Method1(void, setWind, IN, const osg::Vec3 &, wind);
	Method0(const osg::Vec3 &, getWind);
	Method1(void, setOverrideRadius, IN, float, r);
	Method0(float, getOverrideRadius);
	Method0(void, setFluidToAir);
	Method0(void, setFluidToWater);
	Method2(void, operate, IN, osgParticle::Particle *, P, IN, double, dt);
	Method1(void, beginOperate, IN, osgParticle::Program *, prg);
	Property(float, FluidDensity);
	Property(float, FluidViscosity);
	Property(float, OverrideRadius);
	Property(const osg::Vec3 &, Wind);
END_REFLECTOR

