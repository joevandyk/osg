// ***************************************************************************
//
//   Generated automatically by genwrapper.
//   Please DO NOT EDIT this file!
//
// ***************************************************************************

#include <osgIntrospection/ReflectionMacros>
#include <osgIntrospection/TypedMethodInfo>
#include <osgIntrospection/Attributes>

#include <osg/CopyOp>
#include <osg/LogicOp>
#include <osg/Object>
#include <osg/State>
#include <osg/StateAttribute>

BEGIN_ENUM_REFLECTOR(osg::LogicOp::Opcode)
	EnumLabel(osg::LogicOp::CLEAR);
	EnumLabel(osg::LogicOp::SET);
	EnumLabel(osg::LogicOp::COPY);
	EnumLabel(osg::LogicOp::COPY_INVERTED);
	EnumLabel(osg::LogicOp::NOOP);
	EnumLabel(osg::LogicOp::INVERT);
	EnumLabel(osg::LogicOp::AND);
	EnumLabel(osg::LogicOp::NAND);
	EnumLabel(osg::LogicOp::OR);
	EnumLabel(osg::LogicOp::NOR);
	EnumLabel(osg::LogicOp::XOR);
	EnumLabel(osg::LogicOp::EQUIV);
	EnumLabel(osg::LogicOp::AND_REVERSE);
	EnumLabel(osg::LogicOp::AND_INVERTED);
	EnumLabel(osg::LogicOp::OR_REVERSE);
	EnumLabel(osg::LogicOp::OR_INVERTED);
END_REFLECTOR

BEGIN_OBJECT_REFLECTOR(osg::LogicOp)
	BaseType(osg::StateAttribute);
	Constructor0();
	Constructor1(IN, osg::LogicOp::Opcode, opcode);
	ConstructorWithDefaults2(IN, const osg::LogicOp &, trans, , IN, const osg::CopyOp &, copyop, osg::CopyOp::SHALLOW_COPY);
	Method0(osg::Object *, cloneType);
	Method1(osg::Object *, clone, IN, const osg::CopyOp &, copyop);
	Method1(bool, isSameKindAs, IN, const osg::Object *, obj);
	Method0(const char *, libraryName);
	Method0(const char *, className);
	Method0(osg::StateAttribute::Type, getType);
	Method1(int, compare, IN, const osg::StateAttribute &, sa);
	Method1(bool, getModeUsage, IN, osg::StateAttribute::ModeUsage &, usage);
	Method1(void, setOpcode, IN, osg::LogicOp::Opcode, opcode);
	Method0(osg::LogicOp::Opcode, getOpcode);
	Method1(void, apply, IN, osg::State &, state);
	Property(osg::LogicOp::Opcode, Opcode);
	ReadOnlyProperty(osg::StateAttribute::Type, Type);
END_REFLECTOR

