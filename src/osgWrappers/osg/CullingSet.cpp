// ***************************************************************************
//
//   Generated automatically by genwrapper.
//   Please DO NOT EDIT this file!
//
// ***************************************************************************

#include <osgIntrospection/ReflectionMacros>
#include <osgIntrospection/TypedMethodInfo>
#include <osgIntrospection/Attributes>

#include <osg/CullingSet>
#include <osg/StateSet>

// Must undefine IN and OUT macros defined in Windows headers
#ifdef IN
#undef IN
#endif
#ifdef OUT
#undef OUT
#endif

TYPE_NAME_ALIAS(std::pair< osg::ref_ptr< osg::StateSet > COMMA  osg::Polytope >, osg::CullingSet::StateFrustumPair);

TYPE_NAME_ALIAS(std::vector< osg::CullingSet::StateFrustumPair >, osg::CullingSet::StateFrustumList);

TYPE_NAME_ALIAS(std::vector< osg::ShadowVolumeOccluder >, osg::CullingSet::OccluderList);

TYPE_NAME_ALIAS(unsigned int, osg::CullingSet::Mask);

BEGIN_ENUM_REFLECTOR(osg::CullingSet::MaskValues)
	I_EnumLabel(osg::CullingSet::NO_CULLING);
	I_EnumLabel(osg::CullingSet::VIEW_FRUSTUM_SIDES_CULLING);
	I_EnumLabel(osg::CullingSet::NEAR_PLANE_CULLING);
	I_EnumLabel(osg::CullingSet::FAR_PLANE_CULLING);
	I_EnumLabel(osg::CullingSet::VIEW_FRUSTUM_CULLING);
	I_EnumLabel(osg::CullingSet::SMALL_FEATURE_CULLING);
	I_EnumLabel(osg::CullingSet::SHADOW_OCCLUSION_CULLING);
	I_EnumLabel(osg::CullingSet::DEFAULT_CULLING);
	I_EnumLabel(osg::CullingSet::ENABLE_ALL_CULLING);
END_REFLECTOR

TYPE_NAME_ALIAS(std::pair< osg::ref_ptr< osg::StateSet > COMMA  osg::Polytope >, osg::CullingSet::StateFrustumPair);

TYPE_NAME_ALIAS(std::vector< osg::CullingSet::StateFrustumPair >, osg::CullingSet::StateFrustumList);

TYPE_NAME_ALIAS(std::vector< osg::ShadowVolumeOccluder >, osg::CullingSet::OccluderList);

TYPE_NAME_ALIAS(unsigned int, osg::CullingSet::Mask);

BEGIN_ENUM_REFLECTOR(osg::CullingSet::MaskValues)
	I_EnumLabel(osg::CullingSet::NO_CULLING);
	I_EnumLabel(osg::CullingSet::VIEW_FRUSTUM_SIDES_CULLING);
	I_EnumLabel(osg::CullingSet::NEAR_PLANE_CULLING);
	I_EnumLabel(osg::CullingSet::FAR_PLANE_CULLING);
	I_EnumLabel(osg::CullingSet::VIEW_FRUSTUM_CULLING);
	I_EnumLabel(osg::CullingSet::SMALL_FEATURE_CULLING);
	I_EnumLabel(osg::CullingSet::SHADOW_OCCLUSION_CULLING);
	I_EnumLabel(osg::CullingSet::DEFAULT_CULLING);
	I_EnumLabel(osg::CullingSet::ENABLE_ALL_CULLING);
END_REFLECTOR

BEGIN_VALUE_REFLECTOR(osg::ref_ptr< osg::StateSet >)
	I_Constructor0();
	I_Constructor1(IN, osg::StateSet *, ptr);
	I_Constructor1(IN, const osg::ref_ptr< osg::StateSet > &, rp);
	I_Method0(osg::StateSet *, get);
	I_Method0(bool, valid);
	I_Method0(osg::StateSet *, release);
	I_Method1(void, swap, IN, osg::ref_ptr< osg::StateSet > &, rp);
	I_Constructor0();
	I_Constructor1(IN, osg::StateSet *, ptr);
	I_Constructor1(IN, const osg::ref_ptr< osg::StateSet > &, rp);
	I_Method0(osg::StateSet *, get);
	I_Method0(bool, valid);
	I_Method0(osg::StateSet *, release);
	I_Method1(void, swap, IN, osg::ref_ptr< osg::StateSet > &, rp);
	I_ReadOnlyProperty(osg::StateSet *, );
END_REFLECTOR

STD_PAIR_REFLECTOR(std::pair< osg::ref_ptr< osg::StateSet > COMMA  osg::Polytope >);

STD_VECTOR_REFLECTOR(std::vector< osg::CullingSet::StateFrustumPair >);

