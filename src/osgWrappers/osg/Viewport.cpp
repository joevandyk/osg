// ***************************************************************************
//
//   Generated automatically by genwrapper.
//   Please DO NOT EDIT this file!
//
// ***************************************************************************

#include <osgIntrospection/ReflectionMacros>
#include <osgIntrospection/TypedMethodInfo>
#include <osgIntrospection/Attributes>

#include <osg/CopyOp>
#include <osg/Matrix>
#include <osg/Object>
#include <osg/State>
#include <osg/StateAttribute>
#include <osg/Viewport>

BEGIN_OBJECT_REFLECTOR(osg::Viewport)
	BaseType(osg::StateAttribute);
	Constructor0();
	Constructor4(IN, int, x, IN, int, y, IN, int, width, IN, int, height);
	ConstructorWithDefaults2(IN, const osg::Viewport &, vp, , IN, const osg::CopyOp &, copyop, osg::CopyOp::SHALLOW_COPY);
	Method0(osg::Object *, cloneType);
	Method1(osg::Object *, clone, IN, const osg::CopyOp &, copyop);
	Method1(bool, isSameKindAs, IN, const osg::Object *, obj);
	Method0(const char *, libraryName);
	Method0(const char *, className);
	Method0(osg::StateAttribute::Type, getType);
	Method1(int, compare, IN, const osg::StateAttribute &, sa);
	Method4(void, setViewport, IN, int, x, IN, int, y, IN, int, width, IN, int, height);
	Method4(void, getViewport, IN, int &, x, IN, int &, y, IN, int &, width, IN, int &, height);
	Method0(int, x);
	Method0(int, y);
	Method0(int, width);
	Method0(int, height);
	Method0(bool, valid);
	Method0(float, aspectRatio);
	Method0(const osg::Matrix, computeWindowMatrix);
	Method1(void, apply, IN, osg::State &, state);
	ReadOnlyProperty(osg::StateAttribute::Type, Type);
END_REFLECTOR

