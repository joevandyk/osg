// ***************************************************************************
//
//   Generated automatically by genwrapper.
//   Please DO NOT EDIT this file!
//
// ***************************************************************************

#include <osgIntrospection/ReflectionMacros>
#include <osgIntrospection/TypedMethodInfo>
#include <osgIntrospection/StaticMethodInfo>
#include <osgIntrospection/Attributes>

#include <osg/GraphicsThread>
#include <osg/Object>

// Must undefine IN and OUT macros defined in Windows headers
#ifdef IN
#undef IN
#endif
#ifdef OUT
#undef OUT
#endif

BEGIN_ENUM_REFLECTOR(osg::BarrierOperation::PreBlockOp)
	I_DeclaringFile("osg/GraphicsThread");
	I_EnumLabel(osg::BarrierOperation::NO_OPERATION);
	I_EnumLabel(osg::BarrierOperation::GL_FLUSH);
	I_EnumLabel(osg::BarrierOperation::GL_FINISH);
END_REFLECTOR

BEGIN_OBJECT_REFLECTOR(osg::BarrierOperation)
	I_DeclaringFile("osg/GraphicsThread");
	I_BaseType(osg::Operation);
	I_BaseType(OpenThreads::Barrier);
	I_ConstructorWithDefaults2(IN, int, numThreads, , IN, osg::BarrierOperation::PreBlockOp, op, osg::BarrierOperation::NO_OPERATION,
	                           ____BarrierOperation__int__PreBlockOp,
	                           "",
	                           "");
	I_Method0(void, release,
	          Properties::VIRTUAL,
	          __void__release,
	          "Release the barrier, now. ",
	          "");
	I_PublicMemberProperty(osg::BarrierOperation::PreBlockOp, _preBlockOp);
END_REFLECTOR

BEGIN_OBJECT_REFLECTOR(osg::BlockAndFlushOperation)
	I_DeclaringFile("osg/GraphicsThread");
	I_BaseType(osg::Operation);
	I_BaseType(OpenThreads::Block);
	I_Constructor0(____BlockAndFlushOperation,
	               "",
	               "");
	I_Method0(void, release,
	          Properties::VIRTUAL,
	          __void__release,
	          "",
	          "");
END_REFLECTOR

BEGIN_OBJECT_REFLECTOR(osg::ReleaseContext_Block_MakeCurrentOperation)
	I_DeclaringFile("osg/GraphicsThread");
	I_BaseType(osg::Operation);
	I_BaseType(osg::RefBlock);
	I_Constructor0(____ReleaseContext_Block_MakeCurrentOperation,
	               "",
	               "");
	I_Method0(void, release,
	          Properties::VIRTUAL,
	          __void__release,
	          "if this operation is a barrier then release it. ",
	          "");
END_REFLECTOR

BEGIN_OBJECT_REFLECTOR(osg::SwapBuffersOperation)
	I_DeclaringFile("osg/GraphicsThread");
	I_BaseType(osg::Operation);
	I_Constructor0(____SwapBuffersOperation,
	               "",
	               "");
END_REFLECTOR

