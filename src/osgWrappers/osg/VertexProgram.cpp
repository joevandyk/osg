// ***************************************************************************
//
//   Generated automatically by genwrapper.
//   Please DO NOT EDIT this file!
//
// ***************************************************************************

#include <osgIntrospection/ReflectionMacros>
#include <osgIntrospection/TypedMethodInfo>
#include <osgIntrospection/Attributes>

#include <osg/VertexProgram>

// Must undefine IN and OUT macros defined in Windows headers
#ifdef IN
#undef IN
#endif
#ifdef OUT
#undef OUT
#endif

BEGIN_OBJECT_REFLECTOR(osg::VertexProgram::Extensions)
	I_BaseType(osg::Referenced);
	I_BaseType(osg::Referenced);
	I_Constructor1(IN, unsigned int, contextID);
	I_Constructor1(IN, const osg::VertexProgram::Extensions &, rhs);
	I_Method1(void, lowestCommonDenominator, IN, const osg::VertexProgram::Extensions &, rhs);
	I_Method1(void, setupGLExtenions, IN, unsigned int, contextID);
	I_Method1(void, setVertexProgramSupported, IN, bool, flag);
	I_Method0(bool, isVertexProgramSupported);
	I_Method2(void, glBindProgram, IN, GLenum, target, IN, GLuint, id);
	I_Method2(void, glGenPrograms, IN, GLsizei, n, IN, GLuint *, programs);
	I_Method2(void, glDeletePrograms, IN, GLsizei, n, IN, GLuint *, programs);
	I_Method4(void, glProgramString, IN, GLenum, target, IN, GLenum, format, IN, GLsizei, len, IN, const void *, string);
	I_Method3(void, glProgramLocalParameter4fv, IN, GLenum, target, IN, GLuint, index, IN, const GLfloat *, params);
	I_Constructor1(IN, unsigned int, contextID);
	I_Constructor1(IN, const osg::VertexProgram::Extensions &, rhs);
	I_Method1(void, lowestCommonDenominator, IN, const osg::VertexProgram::Extensions &, rhs);
	I_Method1(void, setupGLExtenions, IN, unsigned int, contextID);
	I_Method1(void, setVertexProgramSupported, IN, bool, flag);
	I_Method0(bool, isVertexProgramSupported);
	I_Method2(void, glBindProgram, IN, GLenum, target, IN, GLuint, id);
	I_Method2(void, glGenPrograms, IN, GLsizei, n, IN, GLuint *, programs);
	I_Method2(void, glDeletePrograms, IN, GLsizei, n, IN, GLuint *, programs);
	I_Method4(void, glProgramString, IN, GLenum, target, IN, GLenum, format, IN, GLsizei, len, IN, const void *, string);
	I_Method3(void, glProgramLocalParameter4fv, IN, GLenum, target, IN, GLuint, index, IN, const GLfloat *, params);
	I_WriteOnlyProperty(bool, VertexProgramSupported);
	I_WriteOnlyProperty(unsigned int, upGLExtenions);
END_REFLECTOR

BEGIN_OBJECT_REFLECTOR(osg::VertexProgram::Extensions)
	I_BaseType(osg::Referenced);
	I_BaseType(osg::Referenced);
	I_Constructor1(IN, unsigned int, contextID);
	I_Constructor1(IN, const osg::VertexProgram::Extensions &, rhs);
	I_Method1(void, lowestCommonDenominator, IN, const osg::VertexProgram::Extensions &, rhs);
	I_Method1(void, setupGLExtenions, IN, unsigned int, contextID);
	I_Method1(void, setVertexProgramSupported, IN, bool, flag);
	I_Method0(bool, isVertexProgramSupported);
	I_Method2(void, glBindProgram, IN, GLenum, target, IN, GLuint, id);
	I_Method2(void, glGenPrograms, IN, GLsizei, n, IN, GLuint *, programs);
	I_Method2(void, glDeletePrograms, IN, GLsizei, n, IN, GLuint *, programs);
	I_Method4(void, glProgramString, IN, GLenum, target, IN, GLenum, format, IN, GLsizei, len, IN, const void *, string);
	I_Method3(void, glProgramLocalParameter4fv, IN, GLenum, target, IN, GLuint, index, IN, const GLfloat *, params);
	I_Constructor1(IN, unsigned int, contextID);
	I_Constructor1(IN, const osg::VertexProgram::Extensions &, rhs);
	I_Method1(void, lowestCommonDenominator, IN, const osg::VertexProgram::Extensions &, rhs);
	I_Method1(void, setupGLExtenions, IN, unsigned int, contextID);
	I_Method1(void, setVertexProgramSupported, IN, bool, flag);
	I_Method0(bool, isVertexProgramSupported);
	I_Method2(void, glBindProgram, IN, GLenum, target, IN, GLuint, id);
	I_Method2(void, glGenPrograms, IN, GLsizei, n, IN, GLuint *, programs);
	I_Method2(void, glDeletePrograms, IN, GLsizei, n, IN, GLuint *, programs);
	I_Method4(void, glProgramString, IN, GLenum, target, IN, GLenum, format, IN, GLsizei, len, IN, const void *, string);
	I_Method3(void, glProgramLocalParameter4fv, IN, GLenum, target, IN, GLuint, index, IN, const GLfloat *, params);
	I_WriteOnlyProperty(bool, VertexProgramSupported);
	I_WriteOnlyProperty(unsigned int, upGLExtenions);
END_REFLECTOR

