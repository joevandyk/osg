// ***************************************************************************
//
//   Generated automatically by genwrapper.
//   Please DO NOT EDIT this file!
//
// ***************************************************************************

#include <osgIntrospection/ReflectionMacros>
#include <osgIntrospection/TypedMethodInfo>
#include <osgIntrospection/Attributes>

#include <osg/CopyOp>
#include <osg/Image>
#include <osg/Object>
#include <osg/State>
#include <osg/StateAttribute>
#include <osg/Texture1D>

// Must undefine IN and OUT macros defined in Windows headers
#ifdef IN
#undef IN
#endif
#ifdef OUT
#undef OUT
#endif

BEGIN_ABSTRACT_OBJECT_REFLECTOR(osg::Texture1D)
	I_BaseType(osg::Texture);
	I_Constructor0();
	I_ConstructorWithDefaults2(IN, const osg::Texture1D &, text, , IN, const osg::CopyOp &, copyop, osg::CopyOp::SHALLOW_COPY);
	I_Method0(osg::Object *, cloneType);
	I_Method1(osg::Object *, clone, IN, const osg::CopyOp &, copyop);
	I_Method1(bool, isSameKindAs, IN, const osg::Object *, obj);
	I_Method0(const char *, libraryName);
	I_Method0(const char *, className);
	I_Method0(osg::StateAttribute::Type, getType);
	I_Method1(int, compare, IN, const osg::StateAttribute &, rhs);
	I_Method0(GLenum, getTextureTarget);
	I_Method1(void, setImage, IN, osg::Image *, image);
	I_Method0(osg::Image *, getImage);
	I_Method0(const osg::Image *, getImage);
	I_Method1(unsigned int &, getModifiedCount, IN, unsigned int, contextID);
	I_Method2(void, setImage, IN, unsigned, int, IN, osg::Image *, image);
	I_Method1(osg::Image *, getImage, IN, unsigned, int);
	I_Method1(const osg::Image *, getImage, IN, unsigned, int);
	I_Method0(unsigned int, getNumImages);
	I_Method1(void, setTextureWidth, IN, int, width);
	I_Method0(int, getTextureWidth);
	I_Method1(void, setSubloadCallback, IN, osg::Texture1D::SubloadCallback *, cb);
	I_Method0(osg::Texture1D::SubloadCallback *, getSubloadCallback);
	I_Method0(const osg::Texture1D::SubloadCallback *, getSubloadCallback);
	I_Method1(void, setNumMipmapLevels, IN, unsigned int, num);
	I_Method0(unsigned int, getNumMipmapLevels);
	I_Method4(void, copyTexImage1D, IN, osg::State &, state, IN, int, x, IN, int, y, IN, int, width);
	I_Method5(void, copyTexSubImage1D, IN, osg::State &, state, IN, int, xoffset, IN, int, x, IN, int, y, IN, int, width);
	I_Method1(void, apply, IN, osg::State &, state);
	I_Property(osg::Image *, Image);
	I_WriteOnlyProperty(unsigned int, NumMipmapLevels);
	I_Property(osg::Texture1D::SubloadCallback *, SubloadCallback);
	I_ReadOnlyProperty(GLenum, TextureTarget);
	I_Property(int, TextureWidth);
	I_ReadOnlyProperty(osg::StateAttribute::Type, Type);
END_REFLECTOR

BEGIN_ABSTRACT_OBJECT_REFLECTOR(osg::Texture1D::SubloadCallback)
	I_BaseType(osg::Referenced);
	I_Constructor0();
	I_Method2(void, load, IN, const osg::Texture1D &, texture, IN, osg::State &, state);
	I_Method2(void, subload, IN, const osg::Texture1D &, texture, IN, osg::State &, state);
END_REFLECTOR

