// ***************************************************************************
//
//   Generated automatically by genwrapper.
//   Please DO NOT EDIT this file!
//
// ***************************************************************************

#include <osgIntrospection/ReflectionMacros>
#include <osgIntrospection/TypedMethodInfo>
#include <osgIntrospection/Attributes>

#include <osg/BoundingSphere>
#include <osg/CopyOp>
#include <osg/Matrix>
#include <osg/MatrixTransform>
#include <osg/NodeVisitor>
#include <osg/Object>
#include <osg/PositionAttitudeTransform>
#include <osg/Transform>

BEGIN_ENUM_REFLECTOR(osg::Transform::ReferenceFrame)
	EnumLabel(osg::Transform::RELATIVE_RF);
	EnumLabel(osg::Transform::ABSOLUTE_RF);
END_REFLECTOR

BEGIN_OBJECT_REFLECTOR(osg::Transform)
	BaseType(osg::Group);
	Constructor0();
	ConstructorWithDefaults2(IN, const osg::Transform &, x, , IN, const osg::CopyOp &, copyop, osg::CopyOp::SHALLOW_COPY);
	Method0(osg::Object *, cloneType);
	Method1(osg::Object *, clone, IN, const osg::CopyOp &, copyop);
	Method1(bool, isSameKindAs, IN, const osg::Object *, obj);
	Method0(const char *, className);
	Method0(const char *, libraryName);
	Method1(void, accept, IN, osg::NodeVisitor &, nv);
	Method0(osg::Transform *, asTransform);
	Method0(const osg::Transform *, asTransform);
	Method0(osg::MatrixTransform *, asMatrixTransform);
	Method0(const osg::MatrixTransform *, asMatrixTransform);
	Method0(osg::PositionAttitudeTransform *, asPositionAttitudeTransform);
	Method0(const osg::PositionAttitudeTransform *, asPositionAttitudeTransform);
	Method1(void, setReferenceFrame, IN, osg::Transform::ReferenceFrame, rf);
	Method0(osg::Transform::ReferenceFrame, getReferenceFrame);
	Method2(bool, computeLocalToWorldMatrix, IN, osg::Matrix &, matrix, IN, osg::NodeVisitor *, x);
	Method2(bool, computeWorldToLocalMatrix, IN, osg::Matrix &, matrix, IN, osg::NodeVisitor *, x);
	Method0(osg::BoundingSphere, computeBound);
	Property(osg::Transform::ReferenceFrame, ReferenceFrame);
END_REFLECTOR

