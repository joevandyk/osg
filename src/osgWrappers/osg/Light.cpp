// ***************************************************************************
//
//   Generated automatically by genwrapper.
//   Please DO NOT EDIT this file!
//
// ***************************************************************************

#include <osgIntrospection/ReflectionMacros>
#include <osgIntrospection/TypedMethodInfo>
#include <osgIntrospection/Attributes>

#include <osg/CopyOp>
#include <osg/Light>
#include <osg/Object>
#include <osg/State>
#include <osg/StateAttribute>
#include <osg/Vec3>
#include <osg/Vec4>

BEGIN_OBJECT_REFLECTOR(osg::Light)
	BaseType(osg::StateAttribute);
	Constructor0();
	ConstructorWithDefaults2(IN, const osg::Light &, light, , IN, const osg::CopyOp &, copyop, osg::CopyOp::SHALLOW_COPY);
	Method0(osg::Object *, cloneType);
	Method1(osg::Object *, clone, IN, const osg::CopyOp &, copyop);
	Method1(bool, isSameKindAs, IN, const osg::Object *, obj);
	Method0(const char *, libraryName);
	Method0(const char *, className);
	Method0(osg::StateAttribute::Type, getType);
	Method1(int, compare, IN, const osg::StateAttribute &, sa);
	Method0(unsigned int, getMember);
	Method1(bool, getModeUsage, IN, osg::StateAttribute::ModeUsage &, usage);
	Method1(void, setLightNum, IN, int, num);
	Method0(int, getLightNum);
	Method1(void, setAmbient, IN, const osg::Vec4 &, ambient);
	Method0(const osg::Vec4 &, getAmbient);
	Method1(void, setDiffuse, IN, const osg::Vec4 &, diffuse);
	Method0(const osg::Vec4 &, getDiffuse);
	Method1(void, setSpecular, IN, const osg::Vec4 &, specular);
	Method0(const osg::Vec4 &, getSpecular);
	Method1(void, setPosition, IN, const osg::Vec4 &, position);
	Method0(const osg::Vec4 &, getPosition);
	Method1(void, setDirection, IN, const osg::Vec3 &, direction);
	Method0(const osg::Vec3 &, getDirection);
	Method1(void, setConstantAttenuation, IN, float, constant_attenuation);
	Method0(float, getConstantAttenuation);
	Method1(void, setLinearAttenuation, IN, float, linear_attenuation);
	Method0(float, getLinearAttenuation);
	Method1(void, setQuadraticAttenuation, IN, float, quadratic_attenuation);
	Method0(float, getQuadraticAttenuation);
	Method1(void, setSpotExponent, IN, float, spot_exponent);
	Method0(float, getSpotExponent);
	Method1(void, setSpotCutoff, IN, float, spot_cutoff);
	Method0(float, getSpotCutoff);
	Method0(void, captureLightState);
	Method1(void, apply, IN, osg::State &, state);
	Property(const osg::Vec4 &, Ambient);
	Property(float, ConstantAttenuation);
	Property(const osg::Vec4 &, Diffuse);
	Property(const osg::Vec3 &, Direction);
	Property(int, LightNum);
	Property(float, LinearAttenuation);
	ReadOnlyProperty(unsigned int, Member);
	Property(const osg::Vec4 &, Position);
	Property(float, QuadraticAttenuation);
	Property(const osg::Vec4 &, Specular);
	Property(float, SpotCutoff);
	Property(float, SpotExponent);
	ReadOnlyProperty(osg::StateAttribute::Type, Type);
END_REFLECTOR

