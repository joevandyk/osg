// ***************************************************************************
//
//   Generated automatically by genwrapper.
//   Please DO NOT EDIT this file!
//
// ***************************************************************************

#include <osgIntrospection/ReflectionMacros>
#include <osgIntrospection/TypedMethodInfo>
#include <osgIntrospection/Attributes>

#include <osg/ConvexPlanarOccluder>
#include <osg/ConvexPlanarPolygon>
#include <osg/CopyOp>
#include <osg/Object>

TYPE_NAME_ALIAS(std::vector< osg::ConvexPlanarPolygon >, osg::ConvexPlanarOccluder::HoleList);

BEGIN_OBJECT_REFLECTOR(osg::ConvexPlanarOccluder)
	BaseType(osg::Object);
	Constructor0();
	ConstructorWithDefaults2(IN, const osg::ConvexPlanarOccluder &, cpo, , IN, const osg::CopyOp &, copyop, osg::CopyOp::SHALLOW_COPY);
	Method0(osg::Object *, cloneType);
	Method1(osg::Object *, clone, IN, const osg::CopyOp &, copyop);
	Method1(bool, isSameKindAs, IN, const osg::Object *, obj);
	Method0(const char *, libraryName);
	Method0(const char *, className);
	Method1(void, setOccluder, IN, const osg::ConvexPlanarPolygon &, cpp);
	Method0(osg::ConvexPlanarPolygon &, getOccluder);
	Method0(const osg::ConvexPlanarPolygon &, getOccluder);
	Method1(void, addHole, IN, const osg::ConvexPlanarPolygon &, cpp);
	Method1(void, setHoleList, IN, const osg::ConvexPlanarOccluder::HoleList &, holeList);
	Method0(osg::ConvexPlanarOccluder::HoleList &, getHoleList);
	Method0(const osg::ConvexPlanarOccluder::HoleList &, getHoleList);
	Property(const osg::ConvexPlanarOccluder::HoleList &, HoleList);
	Property(const osg::ConvexPlanarPolygon &, Occluder);
END_REFLECTOR

STD_VECTOR_REFLECTOR(std::vector< osg::ConvexPlanarPolygon >);

