// ***************************************************************************
//
//   Generated automatically by genwrapper.
//   Please DO NOT EDIT this file!
//
// ***************************************************************************

#include <osgIntrospection/ReflectionMacros>
#include <osgIntrospection/TypedMethodInfo>
#include <osgIntrospection/Attributes>

#include <osg/BoundingSphere>
#include <osg/CopyOp>
#include <osg/Node>
#include <osg/NodeVisitor>
#include <osg/Object>
#include <osg/ProxyNode>
#include <osg/Vec3>

TYPE_NAME_ALIAS(std::vector< std::string >, osg::ProxyNode::FileNameList);

BEGIN_ENUM_REFLECTOR(osg::ProxyNode::CenterMode)
	EnumLabel(osg::ProxyNode::USE_BOUNDING_SPHERE_CENTER);
	EnumLabel(osg::ProxyNode::USER_DEFINED_CENTER);
END_REFLECTOR

BEGIN_OBJECT_REFLECTOR(osg::ProxyNode)
	BaseType(osg::Group);
	Constructor0();
	ConstructorWithDefaults2(IN, const osg::ProxyNode &, x, , IN, const osg::CopyOp &, copyop, osg::CopyOp::SHALLOW_COPY);
	Method0(osg::Object *, cloneType);
	Method1(osg::Object *, clone, IN, const osg::CopyOp &, copyop);
	Method1(bool, isSameKindAs, IN, const osg::Object *, obj);
	Method0(const char *, className);
	Method0(const char *, libraryName);
	Method1(void, accept, IN, osg::NodeVisitor &, nv);
	Method1(void, traverse, IN, osg::NodeVisitor &, nv);
	Method1(bool, addChild, IN, osg::Node *, child);
	Method2(bool, addChild, IN, osg::Node *, child, IN, const std::string &, filename);
	Method1(bool, removeChild, IN, osg::Node *, child);
	Method1(void, setDatabasePath, IN, const std::string &, path);
	Method0(const std::string &, getDatabasePath);
	Method2(void, setFileName, IN, unsigned int, childNo, IN, const std::string &, filename);
	Method1(const std::string &, getFileName, IN, unsigned int, childNo);
	Method0(unsigned int, getNumFileNames);
	Method1(void, setCenterMode, IN, osg::ProxyNode::CenterMode, mode);
	Method0(osg::ProxyNode::CenterMode, getCenterMode);
	Method1(void, setCenter, IN, const osg::Vec3 &, center);
	Method0(const osg::Vec3 &, getCenter);
	Method1(void, setRadius, IN, float, radius);
	Method0(float, getRadius);
	Method0(osg::BoundingSphere, computeBound);
	Property(const osg::Vec3 &, Center);
	Property(osg::ProxyNode::CenterMode, CenterMode);
	Property(const std::string &, DatabasePath);
	ArrayProperty_G(const std::string &, FileName, FileNames, unsigned int, void);
	Property(float, Radius);
END_REFLECTOR

