// ***************************************************************************
//
//   Generated automatically by genwrapper.
//   Please DO NOT EDIT this file!
//
// ***************************************************************************

#include <osgIntrospection/ReflectionMacros>
#include <osgIntrospection/TypedMethodInfo>
#include <osgIntrospection/Attributes>

#include <osg/ClipPlane>
#include <osg/CopyOp>
#include <osg/Object>
#include <osg/Plane>
#include <osg/State>
#include <osg/StateAttribute>
#include <osg/Vec4d>

BEGIN_OBJECT_REFLECTOR(osg::ClipPlane)
	BaseType(osg::StateAttribute);
	Constructor0();
	Constructor2(IN, unsigned int, no, IN, const osg::Vec4d &, plane);
	Constructor2(IN, unsigned int, no, IN, const osg::Plane &, plane);
	Constructor5(IN, unsigned int, no, IN, double, a, IN, double, b, IN, double, c, IN, double, d);
	ConstructorWithDefaults2(IN, const osg::ClipPlane &, cp, , IN, const osg::CopyOp &, copyop, osg::CopyOp::SHALLOW_COPY);
	Method0(osg::Object *, cloneType);
	Method1(osg::Object *, clone, IN, const osg::CopyOp &, copyop);
	Method1(bool, isSameKindAs, IN, const osg::Object *, obj);
	Method0(const char *, libraryName);
	Method0(const char *, className);
	Method0(osg::StateAttribute::Type, getType);
	Method1(int, compare, IN, const osg::StateAttribute &, sa);
	Method0(unsigned int, getMember);
	Method1(bool, getModeUsage, IN, osg::StateAttribute::ModeUsage &, usage);
	Method1(void, setClipPlane, IN, const osg::Plane &, plane);
	Method4(void, setClipPlane, IN, double, a, IN, double, b, IN, double, c, IN, double, d);
	Method1(void, setClipPlane, IN, const osg::Vec4d &, plane);
	Method0(const osg::Vec4d &, getClipPlane);
	Method1(void, setClipPlaneNum, IN, unsigned int, num);
	Method0(unsigned int, getClipPlaneNum);
	Method1(void, apply, IN, osg::State &, state);
	Property(const osg::Vec4d &, ClipPlane);
	Property(unsigned int, ClipPlaneNum);
	ReadOnlyProperty(unsigned int, Member);
	ReadOnlyProperty(osg::StateAttribute::Type, Type);
END_REFLECTOR

