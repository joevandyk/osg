// ***************************************************************************
//
//   Generated automatically by genwrapper.
//   Please DO NOT EDIT this file!
//
// ***************************************************************************

#include <osgIntrospection/ReflectionMacros>
#include <osgIntrospection/TypedMethodInfo>
#include <osgIntrospection/Attributes>

#include <osg/CopyOp>
#include <osg/Group>
#include <osg/Node>
#include <osg/NodeVisitor>
#include <osg/Object>
#include <osg/PagedLOD>

TYPE_NAME_ALIAS(std::vector< osg::PagedLOD::PerRangeData >, osg::PagedLOD::PerRangeDataList);

BEGIN_OBJECT_REFLECTOR(osg::PagedLOD)
	BaseType(osg::LOD);
	Constructor0();
	ConstructorWithDefaults2(IN, const osg::PagedLOD &, x, , IN, const osg::CopyOp &, copyop, osg::CopyOp::SHALLOW_COPY);
	Method0(osg::Object *, cloneType);
	Method1(osg::Object *, clone, IN, const osg::CopyOp &, copyop);
	Method1(bool, isSameKindAs, IN, const osg::Object *, obj);
	Method0(const char *, className);
	Method0(const char *, libraryName);
	Method1(void, accept, IN, osg::NodeVisitor &, nv);
	Method1(void, traverse, IN, osg::NodeVisitor &, nv);
	Method1(bool, addChild, IN, osg::Node *, child);
	Method3(bool, addChild, IN, osg::Node *, child, IN, float, min, IN, float, max);
	MethodWithDefaults6(bool, addChild, IN, osg::Node *, child, , IN, float, min, , IN, float, max, , IN, const std::string &, filename, , IN, float, priorityOffset, 0.0f, IN, float, priorityScale, 1.0f);
	Method1(bool, removeChild, IN, osg::Node *, child);
	Method1(void, setDatabasePath, IN, const std::string &, path);
	Method0(const std::string &, getDatabasePath);
	Method2(void, setFileName, IN, unsigned int, childNo, IN, const std::string &, filename);
	Method1(const std::string &, getFileName, IN, unsigned int, childNo);
	Method0(unsigned int, getNumFileNames);
	Method2(void, setPriorityOffset, IN, unsigned int, childNo, IN, float, priorityOffset);
	Method1(float, getPriorityOffset, IN, unsigned int, childNo);
	Method0(unsigned int, getNumPriorityOffsets);
	Method2(void, setPriorityScale, IN, unsigned int, childNo, IN, float, priorityScale);
	Method1(float, getPriorityScale, IN, unsigned int, childNo);
	Method0(unsigned int, getNumPriorityScales);
	Method2(void, setTimeStamp, IN, unsigned int, childNo, IN, double, timeStamp);
	Method1(double, getTimeStamp, IN, unsigned int, childNo);
	Method0(unsigned int, getNumTimeStamps);
	Method1(void, setFrameNumberOfLastTraversal, IN, int, frameNumber);
	Method0(int, getFrameNumberOfLastTraversal);
	Method1(void, setNumChildrenThatCannotBeExpired, IN, unsigned int, num);
	Method0(unsigned int, getNumChildrenThatCannotBeExpired);
	Method2(bool, removeExpiredChildren, IN, double, expiryTime, IN, osg::NodeList &, removedChildren);
	Property(const std::string &, DatabasePath);
	ArrayProperty_G(const std::string &, FileName, FileNames, unsigned int, void);
	Property(int, FrameNumberOfLastTraversal);
	WriteOnlyProperty(unsigned int, NumChildrenThatCannotBeExpired);
	ArrayProperty_G(float, PriorityOffset, PriorityOffsets, unsigned int, void);
	ArrayProperty_G(float, PriorityScale, PriorityScales, unsigned int, void);
	ArrayProperty_G(double, TimeStamp, TimeStamps, unsigned int, void);
END_REFLECTOR

BEGIN_VALUE_REFLECTOR(osg::PagedLOD::PerRangeData)
	Constructor0();
	Constructor1(IN, const osg::PagedLOD::PerRangeData &, prd);
END_REFLECTOR

STD_VECTOR_REFLECTOR(std::vector< osg::PagedLOD::PerRangeData >);

