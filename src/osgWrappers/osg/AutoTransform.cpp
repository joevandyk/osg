// ***************************************************************************
//
//   Generated automatically by genwrapper.
//   Please DO NOT EDIT this file!
//
// ***************************************************************************

#include <osgIntrospection/ReflectionMacros>
#include <osgIntrospection/TypedMethodInfo>
#include <osgIntrospection/Attributes>

#include <osg/AutoTransform>
#include <osg/CopyOp>
#include <osg/Matrix>
#include <osg/NodeVisitor>
#include <osg/Object>
#include <osg/Quat>
#include <osg/Vec3>

BEGIN_ENUM_REFLECTOR(osg::AutoTransform::AutoRotateMode)
	EnumLabel(osg::AutoTransform::NO_ROTATION);
	EnumLabel(osg::AutoTransform::ROTATE_TO_SCREEN);
	EnumLabel(osg::AutoTransform::ROTATE_TO_CAMERA);
END_REFLECTOR

BEGIN_OBJECT_REFLECTOR(osg::AutoTransform)
	BaseType(osg::Transform);
	Constructor0();
	ConstructorWithDefaults2(IN, const osg::AutoTransform &, pat, , IN, const osg::CopyOp &, copyop, osg::CopyOp::SHALLOW_COPY);
	Method0(osg::Object *, cloneType);
	Method1(osg::Object *, clone, IN, const osg::CopyOp &, copyop);
	Method1(bool, isSameKindAs, IN, const osg::Object *, obj);
	Method0(const char *, className);
	Method0(const char *, libraryName);
	Method1(void, accept, IN, osg::NodeVisitor &, nv);
	Method0(osg::AutoTransform *, asAutoTransform);
	Method0(const osg::AutoTransform *, asAutoTransform);
	Method1(void, setPosition, IN, const osg::Vec3 &, pos);
	Method0(const osg::Vec3 &, getPosition);
	Method1(void, setRotation, IN, const osg::Quat &, quat);
	Method0(const osg::Quat &, getRotation);
	Method1(void, setScale, IN, float, scale);
	Method1(void, setScale, IN, const osg::Vec3 &, scale);
	Method0(const osg::Vec3 &, getScale);
	Method1(void, setPivotPoint, IN, const osg::Vec3 &, pivot);
	Method0(const osg::Vec3 &, getPivotPoint);
	Method1(void, setAutoUpdateEyeMovementTolerance, IN, float, tolerance);
	Method0(float, getAutoUpdateEyeMovementTolerance);
	Method1(void, setAutoRotateMode, IN, osg::AutoTransform::AutoRotateMode, mode);
	Method0(osg::AutoTransform::AutoRotateMode, getAutoRotateMode);
	Method1(void, setAutoScaleToScreen, IN, bool, autoScaleToScreen);
	Method0(bool, getAutoScaleToScreen);
	Method2(bool, computeLocalToWorldMatrix, IN, osg::Matrix &, matrix, IN, osg::NodeVisitor *, nv);
	Method2(bool, computeWorldToLocalMatrix, IN, osg::Matrix &, matrix, IN, osg::NodeVisitor *, nv);
	Property(osg::AutoTransform::AutoRotateMode, AutoRotateMode);
	Property(bool, AutoScaleToScreen);
	Property(float, AutoUpdateEyeMovementTolerance);
	Property(const osg::Vec3 &, PivotPoint);
	Property(const osg::Vec3 &, Position);
	Property(const osg::Quat &, Rotation);
	Property(const osg::Vec3 &, Scale);
END_REFLECTOR

