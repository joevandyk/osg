// ***************************************************************************
//
//   Generated automatically by genwrapper.
//   Please DO NOT EDIT this file!
//
// ***************************************************************************

#include <osgIntrospection/ReflectionMacros>
#include <osgIntrospection/TypedMethodInfo>
#include <osgIntrospection/Attributes>

#include <osg/Shape>
#include <osg/test/Shape>

// Must undefine IN and OUT macros defined in Windows headers
#ifdef IN
#undef IN
#endif
#ifdef OUT
#undef OUT
#endif

TYPE_NAME_ALIAS(std::vector< osg::ref_ptr< osg::Shape > >, osg::CompositeShape::ChildList);

TYPE_NAME_ALIAS(std::vector< osg::ref_ptr< osg::Shape > >, osg::CompositeShape::ChildList);

TYPE_NAME_ALIAS(std::vector< float >, osg::HeightField::HeightList);

TYPE_NAME_ALIAS(std::vector< float >, osg::HeightField::HeightList);

TYPE_NAME_ALIAS(osg::HeightField, osg::Grid);

BEGIN_VALUE_REFLECTOR(osg::ref_ptr< osg::Shape >)
	I_Constructor0();
	I_Constructor1(IN, osg::Shape *, ptr);
	I_Constructor1(IN, const osg::ref_ptr< osg::Shape > &, rp);
	I_Method0(osg::Shape *, get);
	I_Method0(bool, valid);
	I_Method0(osg::Shape *, release);
	I_Method1(void, swap, IN, osg::ref_ptr< osg::Shape > &, rp);
	I_Constructor0();
	I_Constructor1(IN, osg::Shape *, ptr);
	I_Constructor1(IN, const osg::ref_ptr< osg::Shape > &, rp);
	I_Method0(osg::Shape *, get);
	I_Method0(bool, valid);
	I_Method0(osg::Shape *, release);
	I_Method1(void, swap, IN, osg::ref_ptr< osg::Shape > &, rp);
	I_ReadOnlyProperty(osg::Shape *, );
END_REFLECTOR

STD_VECTOR_REFLECTOR(std::vector< float >);

STD_VECTOR_REFLECTOR(std::vector< osg::ref_ptr< osg::Shape > >);

