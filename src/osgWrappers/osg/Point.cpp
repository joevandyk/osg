// ***************************************************************************
//
//   Generated automatically by genwrapper.
//   Please DO NOT EDIT this file!
//
// ***************************************************************************

#include <osgIntrospection/ReflectionMacros>
#include <osgIntrospection/TypedMethodInfo>
#include <osgIntrospection/Attributes>

#include <osg/CopyOp>
#include <osg/Object>
#include <osg/Point>
#include <osg/State>
#include <osg/StateAttribute>
#include <osg/Vec3>

BEGIN_OBJECT_REFLECTOR(osg::Point)
	BaseType(osg::StateAttribute);
	Constructor0();
	ConstructorWithDefaults2(IN, const osg::Point &, point, , IN, const osg::CopyOp &, copyop, osg::CopyOp::SHALLOW_COPY);
	Method0(osg::Object *, cloneType);
	Method1(osg::Object *, clone, IN, const osg::CopyOp &, copyop);
	Method1(bool, isSameKindAs, IN, const osg::Object *, obj);
	Method0(const char *, libraryName);
	Method0(const char *, className);
	Method0(osg::StateAttribute::Type, getType);
	Method1(int, compare, IN, const osg::StateAttribute &, sa);
	Method1(bool, getModeUsage, IN, osg::StateAttribute::ModeUsage &, usage);
	Method1(void, setSize, IN, float, size);
	Method0(float, getSize);
	Method1(void, setFadeThresholdSize, IN, float, fadeThresholdSize);
	Method0(float, getFadeThresholdSize);
	Method1(void, setDistanceAttenuation, IN, const osg::Vec3 &, distanceAttenuation);
	Method0(const osg::Vec3 &, getDistanceAttenuation);
	Method1(void, setMinSize, IN, float, minSize);
	Method0(float, getMinSize);
	Method1(void, setMaxSize, IN, float, maxSize);
	Method0(float, getMaxSize);
	Method1(void, apply, IN, osg::State &, state);
	Property(const osg::Vec3 &, DistanceAttenuation);
	Property(float, FadeThresholdSize);
	Property(float, MaxSize);
	Property(float, MinSize);
	Property(float, Size);
	ReadOnlyProperty(osg::StateAttribute::Type, Type);
END_REFLECTOR

BEGIN_OBJECT_REFLECTOR(osg::Point::Extensions)
	BaseType(osg::Referenced);
	Constructor0();
	Constructor1(IN, const osg::Point::Extensions &, rhs);
	Method1(void, lowestCommonDenominator, IN, const osg::Point::Extensions &, rhs);
	Method0(void, setupGLExtenions);
	Method1(void, setPointParametersSupported, IN, bool, flag);
	Method0(bool, isPointParametersSupported);
	Method2(void, glPointParameterf, IN, GLenum, pname, IN, GLfloat, param);
	Method2(void, glPointParameterfv, IN, GLenum, pname, IN, const GLfloat *, params);
	WriteOnlyProperty(bool, PointParametersSupported);
END_REFLECTOR

