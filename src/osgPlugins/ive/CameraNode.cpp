/**********************************************************************
 *
 *    FILE:            CameraNode.cpp
 *
 *    DESCRIPTION:    Read/Write osg::CameraNode in binary format to disk.
 *
 *    CREATED BY:        Auto generated by iveGenerated
 *                    and later modified by Rune Schmidt Jensen.
 *
 *    HISTORY:        Created 17.3.2003
 *
 *    Copyright 2003 VR-C
 **********************************************************************/

#include "Exception.h"
#include "CameraNode.h"
#include "Group.h"

using namespace ive;

void CameraNode::write(DataOutputStream* out){
    // Write CameraNode's identification.
    out->writeInt(IVECAMERANODE);

    // If the osg class is inherited by any other class we should also write this to file.
    osg::Group*  group = dynamic_cast<osg::Group*>(this);
    if(group){
        ((ive::Group*)(group))->write(out);
    }
    else
        throw Exception("CameraNode::write(): Could not cast this osg::CameraNode to an osg::Group.");


    // Write CameraNode's properties.
    out->writeMatrixd(getProjectionMatrix());
    out->writeMatrixd(getViewMatrix());
}

void CameraNode::read(DataInputStream* in){
    // Read CameraNode's identification.
    int id = in->peekInt();
    if(id == IVECAMERANODE){
        // Code to read CameraNode's properties.
        id = in->readInt();
        // If the osg class is inherited by any other class we should also read this from file.
        osg::Group*  group = dynamic_cast<osg::Group*>(this);
        if(group){
            ((ive::Group*)(group))->read(in);
        }
        else
            throw Exception("CameraNode::read(): Could not cast this osg::CameraNode to an osg::Group.");

        // Read matrix
        setProjectionMatrix(in->readMatrixd());
        setViewMatrix(in->readMatrixd());
    }
    else{
        throw Exception("CameraNode::read(): Expected CameraNode identification");
    }
}
