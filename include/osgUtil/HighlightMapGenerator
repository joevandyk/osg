#ifndef OSGUTIL_HIGHLIGHTMAPGENERATOR_
#define OSGUTIL_HIGHLIGHTMAPGENERATOR_

#include <osgUtil/Export>

#include <osgUtil/CubeMapGenerator>

namespace osgUtil
{

	/** This cube map generator produces a specular highlight map. 
	    The vector-color association is: C = (R dot (-L)) ^ n, where C is the 
	    resulting color, R is the reflection vector, L is the light direction 
	    and n is the specular exponent.
	*/
	class OSGUTIL_EXPORT HighlightMapGenerator: public CubeMapGenerator {
	public:
		HighlightMapGenerator(
			const osg::Vec3 &light_direction, 
			const osg::Vec4 &light_color, 
			float specular_exponent, 
			int texture_size = 64);

		HighlightMapGenerator(const HighlightMapGenerator &copy, const osg::CopyOp &copyop = osg::CopyOp::SHALLOW_COPY);

	protected:
		virtual ~HighlightMapGenerator() {}
		HighlightMapGenerator &operator=(const HighlightMapGenerator &) { return *this; }

		inline virtual osg::Vec4 compute_color(const osg::Vec3 &R) const;

	private:
		osg::Vec3 ldir_;
		osg::Vec4 lcol_;
		float sexp_;
	};

	// INLINE METHODS

	inline osg::Vec4 HighlightMapGenerator::compute_color(const osg::Vec3 &R) const
	{
		float v = -ldir_ * (R / R.length());
		if (v < 0) v = 0;
		osg::Vec4 color(lcol_ * powf(v, sexp_));
		color.w() = 1;
		return color;
	}

}

#endif
