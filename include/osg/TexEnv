#ifndef OSG_TEXENV
#define OSG_TEXENV 1

#include <osg/GL>
#include <osg/StateAttribute>

namespace osg {

/** TexEnv - encapsulates the OpenGL glTexEnv (texture environment) state.*/
class SG_EXPORT TexEnv : public StateAttribute
{
    public :

        TexEnv( void );

        META_StateAttribute(TexEnv, TEXENV);

        /** return -1 if *this < *rhs, 0 if *this==*rhs, 1 if *this>*rhs.*/
        virtual int compare(const StateAttribute& sa) const
        {
            // check the types are equal and then create the rhs variable
            // used by the COMPARE_StateAttribute_Paramter macro's below.
            COMPARE_StateAttribute_Types(TexEnv,sa)

            // compare each paramter in turn against the rhs.
            COMPARE_StateAttribute_Parameter(_mode)

            return 0; // passed all the above comparison macro's, must be equal.
        }

        enum Mode {
            DECAL     = GL_DECAL,
            MODULATE  = GL_MODULATE,
            BLEND     = GL_BLEND,
            REPLACE   = GL_REPLACE
        };

        void setMode( const Mode mode );
        
        const Mode getMode() const { return _mode; }
        
        virtual void apply(State& state) const;

    protected :

        virtual ~TexEnv( void );

        Mode _mode;
};

};

#endif
