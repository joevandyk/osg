//C++ header - Open Scene Graph - Copyright (C) 1998-2001 Robert Osfield
//Distributed under the terms of the GNU Library General Public License (LGPL)
//as published by the Free Software Foundation.

#ifndef __OSG_MATH
#define __OSG_MATH

#include <math.h>

#if defined(WIN32) || defined (macintosh)|| defined (sun)

    #include <float.h>


    // PJA MAC OSX
    // This appears to be the simplest way to get these defined under MACOSX
    // where they arent in math.h

    #ifndef acosf
    #define acosf (float)acos
    #endif

    #ifndef asinf
    #define asinf (float)asin
    #endif

    #ifndef cosf
    #define cosf (float)cos
    #endif

    #ifndef sinf
    #define sinf (float)sin
    #endif

    #ifndef logf
    #define logf (float)log
    #endif

    #ifndef floorf
    #define floorf (float)floor
    #endif

    #ifndef powf
    #define powf (float)pow
    #endif

    #ifndef sqrtf
    #define sqrtf (float)sqrt
    #endif

    #ifndef fabsf
    #define fabsf (float)fabs
    #endif

#endif

namespace osg {

// define the stand trig values
#ifdef PI
#undef PI
#undef PI_2
#undef PI_4
#endif
const double PI   = 3.14159265358979323846;
const double PI_2 = 1.57079632679489661923;
const double PI_4 = 0.78539816339744830962;


inline double inDegrees(double angle) { return angle*PI/180.0; }
inline double inRadians(double angle) { return angle; }

inline double DegreesToRadians(double angle) { return angle*PI/180.0; }
inline double RadiansToDegrees(double angle) { return angle*180.0/PI; }

#if defined(WIN32) && !defined(__CYGWIN__) && !defined(__MWERKS__)
    inline bool isNaN(float v) { return _isnan(v)!=0; }
    inline bool isNaN(double v) { return _isnan(v)!=0; }
#else
    inline bool isNaN(float v) { return isnan(v); }
    inline bool isNaN(double v) { return isnan(v); }
#endif

}

#endif  // __OSG_MATH
