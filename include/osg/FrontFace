//C++ header - Open Scene Graph - Copyright (C) 1998-2002 Robert Osfield
//Distributed under the terms of the GNU Library General Public License (LGPL)
//as published by the Free Software Foundation.

#ifndef OSG_FRONTFACE
#define OSG_FRONTFACE 1

#include <osg/StateAttribute>
#include <osg/GL>

namespace osg {

/** Class to specifies the orientation of front-facing polygons.
*/     
class SG_EXPORT FrontFace : public StateAttribute
{
    public :
    
        FrontFace();

        /** Copy constructor using CopyOp to manage deep vs shallow copy.*/
        FrontFace(const FrontFace& ff,const CopyOp& copyop=CopyOp::SHALLOW_COPY):
            StateAttribute(ff,copyop),
            _mode(ff._mode) {}

        META_StateAttribute(osg, FrontFace, FRONTFACE);
        
        /** return -1 if *this < *rhs, 0 if *this==*rhs, 1 if *this>*rhs.*/
        virtual int compare(const StateAttribute& sa) const
        {
            // check the types are equal and then create the rhs variable
            // used by the COMPARE_StateAttribute_Paramter macro's below.
            COMPARE_StateAttribute_Types(FrontFace,sa)

            // compare each paramter in turn against the rhs.
            COMPARE_StateAttribute_Parameter(_mode)

            return 0; // passed all the above comparison macro's, must be equal.
        }

        enum Mode {
            CLOCKWISE = GL_CW,
            COUNTER_CLOCKWISE = GL_CCW
        };
    
        inline void setMode(Mode mode) { _mode = mode; }
        inline const Mode getMode() const    { return _mode; }
    
        virtual void apply(State& state) const;
        
    protected:
    
        virtual ~FrontFace();
        
        Mode _mode;

};

}

#endif
