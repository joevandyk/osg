//C++ header - Open Scene Graph - Copyright (C) 1998-2001 Robert Osfield
//Distributed under the terms of the GNU Library General Public License (LGPL)
//as published by the Free Software Foundation.

#ifndef OSG_CULLFACE
#define OSG_CULLFACE 1

#include <osg/GL>
#include <osg/StateAttribute>

namespace osg {

/** Class to globally enable/disable OpenGL's polygon culling mode=.
*/     
class SG_EXPORT CullFace : public StateAttribute
{
    public :
    
        CullFace();

        /** Copy constructor using CopyOp to manage deep vs shallow copy.*/
        CullFace(const CullFace& cf,const CopyOp& copyop=CopyOp::SHALLOW_COPY):
            StateAttribute(cf,copyop),
            _mode(cf._mode) {}

        META_StateAttribute(osg, CullFace, CULLFACE);
        
        /** return -1 if *this < *rhs, 0 if *this==*rhs, 1 if *this>*rhs.*/
        virtual int compare(const StateAttribute& sa) const
        {
            // check the types are equal and then create the rhs variable
            // used by the COMPARE_StateAttribute_Paramter macro's below.
            COMPARE_StateAttribute_Types(CullFace,sa)

            // compare each paramter in turn against the rhs.
            COMPARE_StateAttribute_Parameter(_mode)

            return 0; // passed all the above comparison macro's, must be equal.
        }

        virtual void getAssociatedModes(std::vector<GLMode>& modes) const 
        {
            modes.push_back(GL_CULL_FACE);
        }

        enum Mode {
            FRONT = GL_FRONT,
            BACK = GL_BACK,
            FRONT_AND_BACK = GL_FRONT_AND_BACK
        };
    
        inline void setMode(const Mode mode) { _mode = mode; }

        inline const Mode getMode() const { return _mode; }
    
        virtual void apply(State& state) const;
        
    protected:
    
        virtual ~CullFace();
        
        Mode _mode;

};

}

#endif
