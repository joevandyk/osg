//C++ header - Open Scene Graph - Copyright (C) 1998-2001 Robert Osfield
//Distributed under the terms of the GNU Library General Public License (LGPL)
//as published by the Free Software Foundation.

#ifndef OSG_POLYGONMODE
#define OSG_POLYGONMODE 1

#include <osg/StateAttribute>
#include <osg/GL>

namespace osg {

/** Class to for setting OpenGL's polygon culling mode.
*/     
class SG_EXPORT PolygonMode : public StateAttribute
{
    public :
    
        PolygonMode();

        /** Copy constructor using CopyOp to manage deep vs shallow copy.*/
        PolygonMode(const PolygonMode& pm,const CopyOp& copyop=CopyOp::SHALLOW_COPY):
            StateAttribute(pm,copyop),
            _frontAndBack(pm._frontAndBack),
            _modeFront(pm._modeFront),
            _modeBack(pm._modeBack) {}

        META_StateAttribute(PolygonMode, POLYGONMODE);

        /** return -1 if *this < *rhs, 0 if *this==*rhs, 1 if *this>*rhs.*/
        virtual int compare(const StateAttribute& sa) const
        {
            // check the types are equal and then create the rhs variable
            // used by the COMPARE_StateAttribute_Paramter macro's below.
            COMPARE_StateAttribute_Types(PolygonMode,sa)

            // compare each paramter in turn against the rhs.
            COMPARE_StateAttribute_Parameter(_frontAndBack)
            COMPARE_StateAttribute_Parameter(_modeFront)
            COMPARE_StateAttribute_Parameter(_modeBack)

            return 0; // passed all the above comparison macro's, must be equal.
        }

        enum Face {
            FRONT,
            BACK,
            FRONT_AND_BACK
        };
    
        enum Mode {
            POINT = GL_POINT,
            LINE = GL_LINE,
            FILL = GL_FILL
        };

        void setMode(const Face face,const Mode mode);
        
        const Mode getMode(const Face face) const;
    
        inline const bool getFrontAndBack() const { return _frontAndBack; }

        virtual void apply(State& state) const;
        
    protected:
    
        virtual ~PolygonMode();

        bool _frontAndBack;
        Mode _modeFront;
        Mode _modeBack;

};

}

#endif
