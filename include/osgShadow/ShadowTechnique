/* -*-c++-*- OpenSceneGraph - Copyright (C) 1998-2006 Robert Osfield 
 *
 * This library is open source and may be redistributed and/or modified under  
 * the terms of the OpenSceneGraph Public License (OSGPL) version 0.0 or 
 * (at your option) any later version.  The full license is in LICENSE file
 * included with this distribution, and on the openscenegraph.org website.
 * 
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
 * OpenSceneGraph Public License for more details.
*/

#ifndef OSGSHADOW_SHADOWEDTECHNIQUE
#define OSGSHADOW_SHADOWEDTECHNIQUE 1

#include <osg/buffered_value>
#include <osg/Camera>
#include <osg/Texture2D>
#include <osg/TexGenNode>

#include <osgShadow/Export>

namespace osgShadow {

// forward declare ShadowedScene
class ShadowedScene;

/** ShadowedScene provides a mechansim for decorating a scene that the needs to have shadows cast upon it.*/
class OSGSHADOW_EXPORT ShadowTechnique : public osg::Object
{
    public :
        ShadowTechnique();

        ShadowTechnique(const ShadowTechnique& es, const osg::CopyOp& copyop=osg::CopyOp::SHALLOW_COPY);
            
        META_Object(osgShadow, ShadowTechnique);

        ShadowedScene* getShadowedScene() { return _shadowedScene; }
        
        virtual void init();
        
        virtual void update(osg::NodeVisitor& nv);
        
        virtual void cull(osg::NodeVisitor& nv);
        
        virtual void traverse(osg::NodeVisitor& nv);
        
        virtual void dirty() { _dirty = true; }

    protected :

        virtual ~ShadowTechnique() {}
        
        friend class ShadowedScene;
        
        ShadowedScene*  _shadowedScene;
        bool            _dirty;
        
};

}

#endif
