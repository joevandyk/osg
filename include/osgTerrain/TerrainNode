/* -*-c++-*- OpenSceneGraph - Copyright (C) 1998-2006 Robert Osfield 
 *
 * This library is open source and may be redistributed and/or modified under  
 * the terms of the OpenSceneGraph Public License (OSGPL) version 0.0 or 
 * (at your option) any later version.  The full license is in LICENSE file
 * included with this distribution, and on the openscenegraph.org website.
 * 
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
 * OpenSceneGraph Public License for more details.
*/

#ifndef OSGTERRAIN_TERRAINNODE
#define OSGTERRAIN_TERRAINNODE 1

#include <osg/Group>
#include <osg/Image>
#include <osg/CoordinateSystemNode>

#include <osgTerrain/TerrainTechnique>
#include <osgTerrain/Layer>

namespace osgTerrain {

/** Terrain provides a framework for loosly coupling height field data with height rendering algorithms.
  * This allows TerrainTechnique's to be pluged in at runtime.*/
class OSGTERRAIN_EXPORT TerrainNode : public osg::Group
{
    public:

        TerrainNode();
        
        /** Copy constructor using CopyOp to manage deep vs shallow copy.*/
        TerrainNode(const TerrainNode&,const osg::CopyOp& copyop=osg::CopyOp::SHALLOW_COPY);

        META_Node(osgTerrain, TerrainNode);

        virtual void traverse(osg::NodeVisitor& nv);


        /** Set the TerrainTechnique*/
        void setTerrainTechnique(osgTerrain::TerrainTechnique* TerrainTechnique);

        /** Get the TerrainTechnique*/
        TerrainTechnique* getTerrainTechnique() { return _terrainTechnique.get(); }
        
        /** Get the const TerrainTechnique*/
        const TerrainTechnique* getTerrainTechnique() const { return _terrainTechnique.get(); }


        void setHeightLayer(osgTerrain::Layer* layer);
        osgTerrain::Layer* getHeightLayer();
        
        void addColorLayer(osgTerrain::Layer* layer);
        void removeColorLayer(osgTerrain::Layer* layer);

    protected:

        virtual ~TerrainNode();

        
        osg::ref_ptr<TerrainTechnique>   _terrainTechnique;
        
        osg::ref_ptr<Layer> _heightLayer;
};

}

#endif
