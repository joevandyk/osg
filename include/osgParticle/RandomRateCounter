//C++ header - Open Scene Graph - Copyright (C) 1998-2002 Robert Osfield
//Distributed under the terms of the GNU Library General Public License (LGPL)
//as published by the Free Software Foundation.
//osgParticle - Copyright (C) 2002 Marco Jez

#ifndef OSGPARTICLE_RANDOMRATECOUNTER_
#define OSGPARTICLE_RANDOMRATECOUNTER_ 1

#include <osgParticle/VariableRateCounter>

#include <osg/CopyOp>
#include <osg/Object>

namespace osgParticle
{

    class RandomRateCounter: public VariableRateCounter {
    public:
        inline RandomRateCounter();
        inline RandomRateCounter(const RandomRateCounter &copy, const osg::CopyOp &copyop = osg::CopyOp::SHALLOW_COPY);
        
        META_Object(osgParticle, RandomRateCounter);
    
        /// Return the number of particles to be created in this frame
        inline int numParticlesToCreate(double dt) const;
        
    protected:
        virtual ~RandomRateCounter() {}
        
    private:
        mutable float np_;
    };
    
    // INLINE FUNCTIONS
    
    inline RandomRateCounter::RandomRateCounter()
    : VariableRateCounter(), np_(0)
    {
    }
    
    inline RandomRateCounter::RandomRateCounter(const RandomRateCounter &copy, const osg::CopyOp &copyop)
    : VariableRateCounter(copy, copyop), np_(copy.np_)
    {
    }
    
    inline int RandomRateCounter::numParticlesToCreate(double dt) const
    {
        np_ += dt * getRateRange().get_random();
        int n = static_cast<int>(np_);
        np_ -= n;
        return n;
    }    

}


#endif
