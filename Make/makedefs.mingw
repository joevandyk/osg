MAKEDIR    = $(OSGHOME)/Make
INSTRULES  = $(MAKEDIR)/instrules
MAKEDEPEND = Makedepend

MINGW_HOME = d:/usr/mingw

OBJS = $(C++FILES:.cpp=.o)  $(CFILES:.c=.o) $(YACCFILES:.y=.o) $(LEXFILES:.l=.o)

DEPFILES = $(OBJS:.o=.d)

C++       = c++

# need thunking when using wxWindows 
# C++ += -fvtable-thunks

YFLAGS    = -d

#LCINCS   += -I/usr/X11R6/include
#LC++INCS += ${LCINCS}

OPT_FLAGS = -O
DBG_FLAGS = -g
WARN_FLAGS = -Wall -W

LDFLAGS = $(OPT_FLAGS) $(DBG_FLAGS) $(WARN_FLAGS)

CFLAGS    = -DWIN32 $(LDFLAGS) $(LCINCS)

C++FLAGS  = ${CFLAGS}
CPPFLAGS  = ${CFLAGS}

SO_EXT = dll
DL_EXT = dll

LINKERARGS =

DYNAMICLIBRARYLIB =

PFLOADERPATH = /usr/lib/libpfdb

GLUTLIB = -lglut32
GL_LIBS = -lglu32 -lopengl32
X_LIBS  = -lgdi32 -luser32
OSGDB_LIBS = -losgdb_3ds -losgdb_bmp -losgdb_dw -losgdb_flt -losgdb_jpg -losgdb_lwo -losgdb_obj -losgdb_osg -losgdb_osgtgz -losgdb_pic -losgdb_png -losgdb_rgb -losgdb_tga -losgdb_tgz -losgdb_tiff -losgdb_zip

#
# TARGET_DIRS are directories that would not exist on the system except
# for the presence of OpenSceneGraph.  'make instclean' removes these
# directories
#
TARGET_DIRS    = \
		$(MINGW_HOME)/include/osg \
		$(MINGW_HOME)/include/osgDB \
		$(MINGW_HOME)/include/osgGLUT \
		$(MINGW_HOME)/include/osgUtil \
		$(MINGW_HOME)/include/osgText \
		$(MINGW_HOME)/share/OpenSceneGraph\
		$(MINGW_HOME)/share/OpenSceneGraph/data\
		$(MINGW_HOME)/share/OpenSceneGraph/data/Images\
		$(MINGW_HOME)/share/OpenSceneGraph/data/Test\
		$(MINGW_HOME)/lib/osgPlugins\


TARGET_BIN     = $(MINGW_HOME)/bin
TARGET_LIB     = $(MINGW_HOME)/lib
TARGET_INCLUDE = $(MINGW_HOME)/include
TARGET_DATA    = $(MINGW_HOME)/share/OpenSceneGraph/data

#
# This definitions are necessary for IRIX. The following statement
# does not work for smake using a sh:
#
#    for variable in $(LIST); do ...; done
#
# .. if $(LIST) is a NULL variable.  So we have to define 0 length
# strings and check for them inside the for loop
#

TARGET_LIB_FILES = ""
TARGET_BIN_FILES = ""
TARGET_INCLUDE_FILES = ""
TARGET_DATA_FILES = ""
TARGET_LOADER_FILES = ""

# set to your wxWindows TOP directory
WXDIR = d:/src/wxMSW

WX_CFLAGS = -DWXUSINGDLL -D_X86_=1 -DWIN32 -D_WIN32 -DWINVER=0x0400 -D__WIN95__ -D__GNUWIN32__ -D__WIN32__ -I$(WXDIR)/include -I$(WXDIR)/contrib/include -I$(WXDIR)/src/png -I$(WXDIR)/src/jpeg -I$(WXDIR)/src/zlib -I$(WXDIR)/src/tiff -I$(WXDIR)/include/wx/msw/gnuwin32 -DSTRICT -D__WXMSW__ -D__WINDOWS__ -D__WXDEBUG__ -Wall -mwin32 -fno-pcc-struct-return -O2 -fno-exceptions -DWIN32_LEAN_AND_MEAN
# -fno-rtti

WX_CPPFLAGS = -DWXUSINGDLL -D_X86_=1 -DWIN32 -D_WIN32 -DWINVER=0x0400 -D__WIN95__ -D__GNUWIN32__ -D__WIN32__ -I$(WXDIR)/include -I$(WXDIR)/contrib/include -I$(WXDIR)/src/png -I$(WXDIR)/src/jpeg -I$(WXDIR)/src/zlib -I$(WXDIR)/src/tiff -I$(WXDIR)/include/wx/msw/gnuwin32 -DSTRICT -D__WXMSW__ -D__WINDOWS__ -D__WXDEBUG__ -Wall -mwin32 -fno-pcc-struct-return -O2 -fno-exceptions -DWXMAKINGDLL=1 -D_DLL=1 -D_WINDLL=1
# -fno-rtti

WX_LDFLAGS = -L$(WXDIR)/lib -L$(WXDIR)/contrib/lib

WX_LD_LIBS = 

WX_LIBS =  $(WXDIR)/lib/libwx23_1.a -lpng -ljpeg -ltiff -lz -lwinspool -lwinmm -lshell32 -lcomctl32 -lctl3d32 -lodbc32 -ladvapi32 -lodbc32 -lwsock32 -lopengl32 -lglu32 -lole32 -loleaut32 -luuid
