install  : 
	@rm -f $(INSTLOGFILE)
	@$(MAKE) __instbin __instdev
	@more $(INSTLOGFILE)

instbin instdev : 
	@$(MAKE) __$@

__instbin:
	@$(MAKE) INSTSRC=$(TOPDIR)/bin INSTDEST=$(INST_DEMOS) \
		INSTALL?="$(INSTBINCMD)" __install
	@$(MAKE) INSTSRC=$(TOPDIR)/lib INSTDEST=$(INST_LIBS) \
		INSTALL?="$(INSTBINCMD)" __install
	@$(MAKE) INSTSRC=$(TOPDIR)/lib/osgPlugins INSTDEST=$(INST_PLUGINS)\
		INSTALL?="$(INSTBINCMD)" __install
	@echo \
	  "\n"\
	  "    Run-time environment installation successful.  Add \n"\
	  "        $(INST_DEMOS)\n"\
	  "    to your PATH environmental variable, and \n"\
	  "        $(INST_LIBS) and $(INST_PLUGINS) \n"\
	  "    to your LD_LIBRARY_PATH if not already present.\n"\
	  "\n" >> $(INSTLOGFILE)
	

__instdev:
	@for d in `ls -1  $(TOPDIR)/include/ | grep -v CVS`; \
	do\
	  if [ -d $(TOPDIR)/include/$$d ]; \
	  then \
	    $(MAKE) INSTSRC=$(TOPDIR)/include/$$d INSTDEST=$(INST_INCLUDE)/$$d\
		   INSTALL?="$(INSTDEVCMD)" __install;\
	  fi\
	done
	@$(TOPDIR)/Make/instdemosrc \
		$(OS)\
		$(TOPDIR)\
		$(INST_LIBS)\
		$(INST_PLUGINS)\
		$(INST_INCLUDE)\
		$(INST_DEMOS)\
		$(INST_SRC)\
		$(INST_DEMO_SRC)\
		$(INST_DOC)\
		$(INST_DATA)\
		"$(OPTF)"\
		"$(DEPARG)"
	@echo \
	  "\n"\
	  "    Development environment installation successful.  Add\n"\
	  "        -I$(INST_INCLUDE)\n"\
	  "    compile flag when compiling with OSG header files.\n"\
	  "    Example programs can be found at $(INST_DEMO_SRC).\n"\
	  "\n" >> $(INSTLOGFILE)
	

instlinks : 
	@rm -f $(INSTLOGFILE)
	$(MAKE) INSTALL="$(INSTLINKBINCMD)" __instbin
	$(MAKE) INSTALL="$(INSTLINKDEVCMD)" __instdev
	@more $(INSTLOGFILE)

instlinksbin :
	@rm -f $(INSTLOGFILE)
	$(MAKE) INSTALL="$(INSTLINKBINCMD)" __instbin
	@more $(INSTLOGFILE)

instlinksdev :
	@rm -f $(INSTLOGFILE)
	$(MAKE) INSTALL="$(INSTLINKDEVCMD)" __instdev
	@more $(INSTLOGFILE)


instclean : instcleanbin instcleandev

instcleanbin :
	@$(MAKE) INSTSRC=$(TOPDIR)/bin INSTDEST=$(INST_DEMOS) \
		INSTALL?="$(INSTBINCMD)" __instclean
	@$(MAKE) INSTSRC=$(TOPDIR)/lib INSTDEST=$(INST_LIBS) \
		INSTALL?="$(INSTBINCMD)" __instclean
	@$(MAKE) INSTSRC=$(TOPDIR)/lib/osgPlugins INSTDEST=$(INST_PLUGINS)\
		INSTALL?="$(INSTBINCMD)" __instclean

instcleandev :
	@for d in `ls -1  $(TOPDIR)/include/ | grep -v CVS`; \
	do\
	  if [ -d $(TOPDIR)/include/$$d ]; \
	  then \
	    $(MAKE) INSTSRC=$(TOPDIR)/include/$$d INSTDEST=$(INST_INCLUDE)/$$d\
		   INSTALL?="$(INSTDEVCMD)" __instclean;\
	  fi\
	done
	@for d in `ls -1  $(TOPDIR)/src/Demos | grep -v CVS`; \
	do\
	  if [ -d $(TOPDIR)/src/Demos/$$d ]; \
	  then \
	    $(MAKE) INSTSRC=$(TOPDIR)/src/Demos/$$d INSTDEST=$(INST_DEMO_SRC)/$$d\
		   INSTALL?="$(INSTDEVCMD)" __instclean;\
	  fi\
	done


__install :
	@[ -n "$(INSTSRC)" ] || echo "Internal error (INSTSRC definition)"
	@[ -n "$(INSTSRC)" ] && echo > /dev/null
	@[ -n "$(INSTDEST)" ] || echo "Internal error (INSTDEST definition)"
	@[ -n "$(INSTDEST)" ] && echo > /dev/null
	@[ -d $(INSTDEST) ] || mkdir -p $(INSTDEST)
	@cd $(INSTSRC);\
	THISDIR=`pwd`;\
	if [ -n "`ls -1 | grep -v CVS`" ]; then\
	  for f in `ls -1 | grep -v CVS`; \
	  do\
	    if [ -f $$f ] ; \
	    then \
	        echo $(INSTALL) $$THISDIR/$$f $(INSTDEST)/$$f;\
	        $(INSTALL) $$THISDIR/$$f $(INSTDEST)/$$f;\
	    fi\
	  done\
	fi


__instclean :
	@[ -n "$(INSTSRC)" ] || echo "Internal error (INSTSRC definition)"
	@[ -n "$(INSTSRC)" ] && echo > /dev/null
	@[ -n "$(INSTDEST)" ] || echo "Internal error (INSTDEST definition)"
	@[ -n "$(INSTDEST)" ] && echo > /dev/null
	@if [ -d $(INSTDEST) ] ; \
	then\
	  cd $(INSTSRC);\
	  if [ -n "`ls -1 | grep -v CVS`" ]; then\
	    for f in `ls -1 | grep -v CVS`; \
	    do\
	      if [ -f $$f ] ; \
	      then \
	          echo "rm -f $(INSTDEST)/$$f";\
	          rm -f $(INSTDEST)/$$f;\
	      fi\
	    done\
	  fi;\
	  empty=`ls $(INSTDEST)`;\
	  if [ -z "$$empty" ];\
	  then\
	    repeat=1;\
	    while [ $$repeat = 1 ] ; \
	    do \
	      printf "$(INSTDEST) is empty.  Remove? (y/n) [y]: ";\
	      read resp;\
  	      case $$resp in  \
	        ""|Yes|YES|yes|Y|y) rm -rf $(INSTDEST); repeat=0;; \
	        n|N|no|NO)                              repeat=0;; \
                *)                                      repeat=1;; \
	      esac\
            done\
	  fi\
	fi




